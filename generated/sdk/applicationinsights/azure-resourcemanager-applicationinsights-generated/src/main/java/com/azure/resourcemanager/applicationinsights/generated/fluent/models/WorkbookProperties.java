// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.applicationinsights.generated.models.SharedTypeKind;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Properties that contain a workbook.
 */
@Fluent
public final class WorkbookProperties {
    /*
     * The user-defined name of the workbook.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * Configuration of this particular workbook. Configuration data is a string containing valid JSON
     */
    @JsonProperty(value = "serializedData", required = true)
    private String serializedData;

    /*
     * This instance's version of the data model. This can change as new features are added that can be marked workbook.
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * Internally assigned unique id of the workbook definition.
     */
    @JsonProperty(value = "workbookId", required = true)
    private String workbookId;

    /*
     * Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.
     */
    @JsonProperty(value = "kind", required = true)
    private SharedTypeKind sharedTypeKind;

    /*
     * Date and time in UTC of the last modification that was made to this workbook definition.
     */
    @JsonProperty(value = "timeModified", access = JsonProperty.Access.WRITE_ONLY)
    private String timeModified;

    /*
     * Workbook category, as defined by the user at creation time.
     */
    @JsonProperty(value = "category", required = true)
    private String category;

    /*
     * A list of 0 or more tags that are associated with this workbook definition
     */
    @JsonProperty(value = "tags")
    private List<String> tags;

    /*
     * Unique user id of the specific user that owns this workbook.
     */
    @JsonProperty(value = "userId", required = true)
    private String userId;

    /*
     * Optional resourceId for a source resource.
     */
    @JsonProperty(value = "sourceResourceId")
    private String sourceResourceId;

    /**
     * Creates an instance of WorkbookProperties class.
     */
    public WorkbookProperties() {
    }

    /**
     * Get the name property: The user-defined name of the workbook.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The user-defined name of the workbook.
     * 
     * @param name the name value to set.
     * @return the WorkbookProperties object itself.
     */
    public WorkbookProperties withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the serializedData property: Configuration of this particular workbook. Configuration data is a string
     * containing valid JSON.
     * 
     * @return the serializedData value.
     */
    public String serializedData() {
        return this.serializedData;
    }

    /**
     * Set the serializedData property: Configuration of this particular workbook. Configuration data is a string
     * containing valid JSON.
     * 
     * @param serializedData the serializedData value to set.
     * @return the WorkbookProperties object itself.
     */
    public WorkbookProperties withSerializedData(String serializedData) {
        this.serializedData = serializedData;
        return this;
    }

    /**
     * Get the version property: This instance's version of the data model. This can change as new features are added
     * that can be marked workbook.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: This instance's version of the data model. This can change as new features are added
     * that can be marked workbook.
     * 
     * @param version the version value to set.
     * @return the WorkbookProperties object itself.
     */
    public WorkbookProperties withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the workbookId property: Internally assigned unique id of the workbook definition.
     * 
     * @return the workbookId value.
     */
    public String workbookId() {
        return this.workbookId;
    }

    /**
     * Set the workbookId property: Internally assigned unique id of the workbook definition.
     * 
     * @param workbookId the workbookId value to set.
     * @return the WorkbookProperties object itself.
     */
    public WorkbookProperties withWorkbookId(String workbookId) {
        this.workbookId = workbookId;
        return this;
    }

    /**
     * Get the sharedTypeKind property: Enum indicating if this workbook definition is owned by a specific user or is
     * shared between all users with access to the Application Insights component.
     * 
     * @return the sharedTypeKind value.
     */
    public SharedTypeKind sharedTypeKind() {
        return this.sharedTypeKind;
    }

    /**
     * Set the sharedTypeKind property: Enum indicating if this workbook definition is owned by a specific user or is
     * shared between all users with access to the Application Insights component.
     * 
     * @param sharedTypeKind the sharedTypeKind value to set.
     * @return the WorkbookProperties object itself.
     */
    public WorkbookProperties withSharedTypeKind(SharedTypeKind sharedTypeKind) {
        this.sharedTypeKind = sharedTypeKind;
        return this;
    }

    /**
     * Get the timeModified property: Date and time in UTC of the last modification that was made to this workbook
     * definition.
     * 
     * @return the timeModified value.
     */
    public String timeModified() {
        return this.timeModified;
    }

    /**
     * Get the category property: Workbook category, as defined by the user at creation time.
     * 
     * @return the category value.
     */
    public String category() {
        return this.category;
    }

    /**
     * Set the category property: Workbook category, as defined by the user at creation time.
     * 
     * @param category the category value to set.
     * @return the WorkbookProperties object itself.
     */
    public WorkbookProperties withCategory(String category) {
        this.category = category;
        return this;
    }

    /**
     * Get the tags property: A list of 0 or more tags that are associated with this workbook definition.
     * 
     * @return the tags value.
     */
    public List<String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: A list of 0 or more tags that are associated with this workbook definition.
     * 
     * @param tags the tags value to set.
     * @return the WorkbookProperties object itself.
     */
    public WorkbookProperties withTags(List<String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the userId property: Unique user id of the specific user that owns this workbook.
     * 
     * @return the userId value.
     */
    public String userId() {
        return this.userId;
    }

    /**
     * Set the userId property: Unique user id of the specific user that owns this workbook.
     * 
     * @param userId the userId value to set.
     * @return the WorkbookProperties object itself.
     */
    public WorkbookProperties withUserId(String userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Get the sourceResourceId property: Optional resourceId for a source resource.
     * 
     * @return the sourceResourceId value.
     */
    public String sourceResourceId() {
        return this.sourceResourceId;
    }

    /**
     * Set the sourceResourceId property: Optional resourceId for a source resource.
     * 
     * @param sourceResourceId the sourceResourceId value to set.
     * @return the WorkbookProperties object itself.
     */
    public WorkbookProperties withSourceResourceId(String sourceResourceId) {
        this.sourceResourceId = sourceResourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property name in model WorkbookProperties"));
        }
        if (serializedData() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property serializedData in model WorkbookProperties"));
        }
        if (workbookId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property workbookId in model WorkbookProperties"));
        }
        if (sharedTypeKind() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property sharedTypeKind in model WorkbookProperties"));
        }
        if (category() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property category in model WorkbookProperties"));
        }
        if (userId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property userId in model WorkbookProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(WorkbookProperties.class);
}
