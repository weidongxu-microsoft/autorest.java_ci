// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysql.generated.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.ProxyResource;
import com.azure.resourcemanager.mysql.generated.models.ServerEditionCapabilityV2;
import com.azure.resourcemanager.mysql.generated.models.ServerVersionCapabilityV2;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Represents a location capability set. */
@Immutable
public final class CapabilityInner extends ProxyResource {
    /*
     * The properties of a location capability set.
     */
    @JsonProperty(value = "properties")
    private CapabilityPropertiesV2 innerProperties;

    /** Creates an instance of CapabilityInner class. */
    public CapabilityInner() {
    }

    /**
     * Get the innerProperties property: The properties of a location capability set.
     *
     * @return the innerProperties value.
     */
    private CapabilityPropertiesV2 innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the supportedGeoBackupRegions property: supported geo backup regions.
     *
     * @return the supportedGeoBackupRegions value.
     */
    public List<String> supportedGeoBackupRegions() {
        return this.innerProperties() == null ? null : this.innerProperties().supportedGeoBackupRegions();
    }

    /**
     * Get the supportedFlexibleServerEditions property: A list of supported flexible server editions.
     *
     * @return the supportedFlexibleServerEditions value.
     */
    public List<ServerEditionCapabilityV2> supportedFlexibleServerEditions() {
        return this.innerProperties() == null ? null : this.innerProperties().supportedFlexibleServerEditions();
    }

    /**
     * Get the supportedServerVersions property: A list of supported server versions.
     *
     * @return the supportedServerVersions value.
     */
    public List<ServerVersionCapabilityV2> supportedServerVersions() {
        return this.innerProperties() == null ? null : this.innerProperties().supportedServerVersions();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
