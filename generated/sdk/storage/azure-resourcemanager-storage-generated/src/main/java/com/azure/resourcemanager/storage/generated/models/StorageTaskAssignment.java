// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storage.generated.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.storage.generated.fluent.models.StorageTaskAssignmentInner;

/**
 * An immutable client-side representation of StorageTaskAssignment.
 */
public interface StorageTaskAssignment {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the properties property: Properties of the storage task assignment.
     * 
     * @return the properties value.
     */
    StorageTaskAssignmentProperties properties();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.storage.generated.fluent.models.StorageTaskAssignmentInner object.
     * 
     * @return the inner object.
     */
    StorageTaskAssignmentInner innerModel();

    /**
     * The entirety of the StorageTaskAssignment definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The StorageTaskAssignment definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the StorageTaskAssignment definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the StorageTaskAssignment definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, accountName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param accountName The name of the storage account within the specified resource group. Storage account
             * names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
             * @return the next definition stage.
             */
            WithCreate withExistingStorageAccount(String resourceGroupName, String accountName);
        }

        /**
         * The stage of the StorageTaskAssignment definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithProperties {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            StorageTaskAssignment create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            StorageTaskAssignment create(Context context);
        }

        /**
         * The stage of the StorageTaskAssignment definition allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: Properties of the storage task assignment..
             * 
             * @param properties Properties of the storage task assignment.
             * @return the next definition stage.
             */
            WithCreate withProperties(StorageTaskAssignmentProperties properties);
        }
    }

    /**
     * Begins update for the StorageTaskAssignment resource.
     * 
     * @return the stage of resource update.
     */
    StorageTaskAssignment.Update update();

    /**
     * The template for StorageTaskAssignment update.
     */
    interface Update extends UpdateStages.WithProperties {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        StorageTaskAssignment apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        StorageTaskAssignment apply(Context context);
    }

    /**
     * The StorageTaskAssignment update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the StorageTaskAssignment update allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: Properties of the storage task assignment..
             * 
             * @param properties Properties of the storage task assignment.
             * @return the next definition stage.
             */
            Update withProperties(StorageTaskAssignmentUpdateProperties properties);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    StorageTaskAssignment refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    StorageTaskAssignment refresh(Context context);
}
