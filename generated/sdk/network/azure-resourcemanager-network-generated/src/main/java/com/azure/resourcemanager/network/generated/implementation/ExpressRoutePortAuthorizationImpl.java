// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.ExpressRoutePortAuthorizationInner;
import com.azure.resourcemanager.network.generated.models.ExpressRoutePortAuthorization;
import com.azure.resourcemanager.network.generated.models.ExpressRoutePortAuthorizationUseStatus;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;

public final class ExpressRoutePortAuthorizationImpl
    implements ExpressRoutePortAuthorization,
        ExpressRoutePortAuthorization.Definition,
        ExpressRoutePortAuthorization.Update {
    private ExpressRoutePortAuthorizationInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String authorizationKey() {
        return this.innerModel().authorizationKey();
    }

    public ExpressRoutePortAuthorizationUseStatus authorizationUseStatus() {
        return this.innerModel().authorizationUseStatus();
    }

    public String circuitResourceUri() {
        return this.innerModel().circuitResourceUri();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ExpressRoutePortAuthorizationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String expressRoutePortName;

    private String authorizationName;

    public ExpressRoutePortAuthorizationImpl withExistingExpressRoutePort(
        String resourceGroupName, String expressRoutePortName) {
        this.resourceGroupName = resourceGroupName;
        this.expressRoutePortName = expressRoutePortName;
        return this;
    }

    public ExpressRoutePortAuthorization create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExpressRoutePortAuthorizations()
                .createOrUpdate(
                    resourceGroupName, expressRoutePortName, authorizationName, this.innerModel(), Context.NONE);
        return this;
    }

    public ExpressRoutePortAuthorization create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExpressRoutePortAuthorizations()
                .createOrUpdate(resourceGroupName, expressRoutePortName, authorizationName, this.innerModel(), context);
        return this;
    }

    ExpressRoutePortAuthorizationImpl(
        String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new ExpressRoutePortAuthorizationInner();
        this.serviceManager = serviceManager;
        this.authorizationName = name;
    }

    public ExpressRoutePortAuthorizationImpl update() {
        return this;
    }

    public ExpressRoutePortAuthorization apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExpressRoutePortAuthorizations()
                .createOrUpdate(
                    resourceGroupName, expressRoutePortName, authorizationName, this.innerModel(), Context.NONE);
        return this;
    }

    public ExpressRoutePortAuthorization apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExpressRoutePortAuthorizations()
                .createOrUpdate(resourceGroupName, expressRoutePortName, authorizationName, this.innerModel(), context);
        return this;
    }

    ExpressRoutePortAuthorizationImpl(
        ExpressRoutePortAuthorizationInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.expressRoutePortName = Utils.getValueFromIdByName(innerObject.id(), "expressRoutePorts");
        this.authorizationName = Utils.getValueFromIdByName(innerObject.id(), "authorizations");
    }

    public ExpressRoutePortAuthorization refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExpressRoutePortAuthorizations()
                .getWithResponse(resourceGroupName, expressRoutePortName, authorizationName, Context.NONE)
                .getValue();
        return this;
    }

    public ExpressRoutePortAuthorization refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExpressRoutePortAuthorizations()
                .getWithResponse(resourceGroupName, expressRoutePortName, authorizationName, context)
                .getValue();
        return this;
    }

    public ExpressRoutePortAuthorizationImpl withName(String name) {
        this.innerModel().withName(name);
        return this;
    }
}
