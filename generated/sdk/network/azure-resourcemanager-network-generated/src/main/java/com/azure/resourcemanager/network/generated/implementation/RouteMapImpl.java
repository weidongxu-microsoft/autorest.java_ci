// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.RouteMapInner;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;
import com.azure.resourcemanager.network.generated.models.RouteMap;
import com.azure.resourcemanager.network.generated.models.RouteMapRule;
import java.util.Collections;
import java.util.List;

public final class RouteMapImpl implements RouteMap, RouteMap.Definition, RouteMap.Update {
    private RouteMapInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public String type() {
        return this.innerModel().type();
    }

    public List<String> associatedInboundConnections() {
        List<String> inner = this.innerModel().associatedInboundConnections();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> associatedOutboundConnections() {
        List<String> inner = this.innerModel().associatedOutboundConnections();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<RouteMapRule> rules() {
        List<RouteMapRule> inner = this.innerModel().rules();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public RouteMapInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String virtualHubName;

    private String routeMapName;

    public RouteMapImpl withExistingVirtualHub(String resourceGroupName, String virtualHubName) {
        this.resourceGroupName = resourceGroupName;
        this.virtualHubName = virtualHubName;
        return this;
    }

    public RouteMap create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRouteMaps()
                .createOrUpdate(resourceGroupName, virtualHubName, routeMapName, this.innerModel(), Context.NONE);
        return this;
    }

    public RouteMap create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRouteMaps()
                .createOrUpdate(resourceGroupName, virtualHubName, routeMapName, this.innerModel(), context);
        return this;
    }

    RouteMapImpl(String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new RouteMapInner();
        this.serviceManager = serviceManager;
        this.routeMapName = name;
    }

    public RouteMapImpl update() {
        return this;
    }

    public RouteMap apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRouteMaps()
                .createOrUpdate(resourceGroupName, virtualHubName, routeMapName, this.innerModel(), Context.NONE);
        return this;
    }

    public RouteMap apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRouteMaps()
                .createOrUpdate(resourceGroupName, virtualHubName, routeMapName, this.innerModel(), context);
        return this;
    }

    RouteMapImpl(RouteMapInner innerObject, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.virtualHubName = Utils.getValueFromIdByName(innerObject.id(), "virtualHubs");
        this.routeMapName = Utils.getValueFromIdByName(innerObject.id(), "routeMaps");
    }

    public RouteMap refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRouteMaps()
                .getWithResponse(resourceGroupName, virtualHubName, routeMapName, Context.NONE)
                .getValue();
        return this;
    }

    public RouteMap refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRouteMaps()
                .getWithResponse(resourceGroupName, virtualHubName, routeMapName, context)
                .getValue();
        return this;
    }

    public RouteMapImpl withAssociatedInboundConnections(List<String> associatedInboundConnections) {
        this.innerModel().withAssociatedInboundConnections(associatedInboundConnections);
        return this;
    }

    public RouteMapImpl withAssociatedOutboundConnections(List<String> associatedOutboundConnections) {
        this.innerModel().withAssociatedOutboundConnections(associatedOutboundConnections);
        return this;
    }

    public RouteMapImpl withRules(List<RouteMapRule> rules) {
        this.innerModel().withRules(rules);
        return this;
    }
}
