// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.fluent.FirewallPolicyDraftsClient;
import com.azure.resourcemanager.network.generated.fluent.models.FirewallPolicyDraftInner;
import com.azure.resourcemanager.network.generated.models.FirewallPolicyDraft;
import com.azure.resourcemanager.network.generated.models.FirewallPolicyDrafts;

public final class FirewallPolicyDraftsImpl implements FirewallPolicyDrafts {
    private static final ClientLogger LOGGER = new ClientLogger(FirewallPolicyDraftsImpl.class);

    private final FirewallPolicyDraftsClient innerClient;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public FirewallPolicyDraftsImpl(FirewallPolicyDraftsClient innerClient,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<FirewallPolicyDraft> createOrUpdateWithResponse(String resourceGroupName, String firewallPolicyName,
        FirewallPolicyDraftInner parameters, Context context) {
        Response<FirewallPolicyDraftInner> inner = this.serviceClient()
            .createOrUpdateWithResponse(resourceGroupName, firewallPolicyName, parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new FirewallPolicyDraftImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public FirewallPolicyDraft createOrUpdate(String resourceGroupName, String firewallPolicyName,
        FirewallPolicyDraftInner parameters) {
        FirewallPolicyDraftInner inner
            = this.serviceClient().createOrUpdate(resourceGroupName, firewallPolicyName, parameters);
        if (inner != null) {
            return new FirewallPolicyDraftImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteByResourceGroupWithResponse(String resourceGroupName, String firewallPolicyName,
        Context context) {
        return this.serviceClient().deleteWithResponse(resourceGroupName, firewallPolicyName, context);
    }

    public void deleteByResourceGroup(String resourceGroupName, String firewallPolicyName) {
        this.serviceClient().delete(resourceGroupName, firewallPolicyName);
    }

    public Response<FirewallPolicyDraft> getWithResponse(String resourceGroupName, String firewallPolicyName,
        Context context) {
        Response<FirewallPolicyDraftInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, firewallPolicyName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new FirewallPolicyDraftImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public FirewallPolicyDraft get(String resourceGroupName, String firewallPolicyName) {
        FirewallPolicyDraftInner inner = this.serviceClient().get(resourceGroupName, firewallPolicyName);
        if (inner != null) {
            return new FirewallPolicyDraftImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private FirewallPolicyDraftsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}
