// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated;

import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.HttpPipelinePosition;
import com.azure.core.http.policy.AddDatePolicy;
import com.azure.core.http.policy.AddHeadersFromContextPolicy;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.http.policy.HttpLoggingPolicy;
import com.azure.core.http.policy.HttpPipelinePolicy;
import com.azure.core.http.policy.HttpPolicyProviders;
import com.azure.core.http.policy.RequestIdPolicy;
import com.azure.core.http.policy.RetryOptions;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.util.Configuration;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.fluent.NetworkManagementClient;
import com.azure.resourcemanager.network.generated.implementation.AdminRuleCollectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.AdminRulesImpl;
import com.azure.resourcemanager.network.generated.implementation.ApplicationGatewayPrivateEndpointConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.ApplicationGatewayPrivateLinkResourcesImpl;
import com.azure.resourcemanager.network.generated.implementation.ApplicationGatewaysImpl;
import com.azure.resourcemanager.network.generated.implementation.ApplicationSecurityGroupsImpl;
import com.azure.resourcemanager.network.generated.implementation.AvailableDelegationsImpl;
import com.azure.resourcemanager.network.generated.implementation.AvailableEndpointServicesImpl;
import com.azure.resourcemanager.network.generated.implementation.AvailablePrivateEndpointTypesImpl;
import com.azure.resourcemanager.network.generated.implementation.AvailableResourceGroupDelegationsImpl;
import com.azure.resourcemanager.network.generated.implementation.AvailableServiceAliasesImpl;
import com.azure.resourcemanager.network.generated.implementation.AzureFirewallFqdnTagsImpl;
import com.azure.resourcemanager.network.generated.implementation.AzureFirewallsImpl;
import com.azure.resourcemanager.network.generated.implementation.BastionHostsImpl;
import com.azure.resourcemanager.network.generated.implementation.BgpServiceCommunitiesImpl;
import com.azure.resourcemanager.network.generated.implementation.ConfigurationPolicyGroupsImpl;
import com.azure.resourcemanager.network.generated.implementation.ConnectionMonitorsImpl;
import com.azure.resourcemanager.network.generated.implementation.ConnectivityConfigurationsImpl;
import com.azure.resourcemanager.network.generated.implementation.CustomIpPrefixesImpl;
import com.azure.resourcemanager.network.generated.implementation.DdosCustomPoliciesImpl;
import com.azure.resourcemanager.network.generated.implementation.DdosProtectionPlansImpl;
import com.azure.resourcemanager.network.generated.implementation.DefaultSecurityRulesImpl;
import com.azure.resourcemanager.network.generated.implementation.DscpConfigurationsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCircuitAuthorizationsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCircuitConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCircuitPeeringsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCircuitsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRouteConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCrossConnectionPeeringsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCrossConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRouteGatewaysImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRouteLinksImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRoutePortAuthorizationsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRoutePortsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRoutePortsLocationsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRouteProviderPortsLocationsImpl;
import com.azure.resourcemanager.network.generated.implementation.ExpressRouteServiceProvidersImpl;
import com.azure.resourcemanager.network.generated.implementation.FirewallPoliciesImpl;
import com.azure.resourcemanager.network.generated.implementation.FirewallPolicyIdpsSignaturesFilterValuesImpl;
import com.azure.resourcemanager.network.generated.implementation.FirewallPolicyIdpsSignaturesImpl;
import com.azure.resourcemanager.network.generated.implementation.FirewallPolicyIdpsSignaturesOverridesImpl;
import com.azure.resourcemanager.network.generated.implementation.FirewallPolicyRuleCollectionGroupsImpl;
import com.azure.resourcemanager.network.generated.implementation.FlowLogsImpl;
import com.azure.resourcemanager.network.generated.implementation.HubRouteTablesImpl;
import com.azure.resourcemanager.network.generated.implementation.HubVirtualNetworkConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.InboundNatRulesImpl;
import com.azure.resourcemanager.network.generated.implementation.InboundSecurityRuleOperationsImpl;
import com.azure.resourcemanager.network.generated.implementation.IpAllocationsImpl;
import com.azure.resourcemanager.network.generated.implementation.IpGroupsImpl;
import com.azure.resourcemanager.network.generated.implementation.LoadBalancerBackendAddressPoolsImpl;
import com.azure.resourcemanager.network.generated.implementation.LoadBalancerFrontendIpConfigurationsImpl;
import com.azure.resourcemanager.network.generated.implementation.LoadBalancerLoadBalancingRulesImpl;
import com.azure.resourcemanager.network.generated.implementation.LoadBalancerNetworkInterfacesImpl;
import com.azure.resourcemanager.network.generated.implementation.LoadBalancerOutboundRulesImpl;
import com.azure.resourcemanager.network.generated.implementation.LoadBalancerProbesImpl;
import com.azure.resourcemanager.network.generated.implementation.LoadBalancersImpl;
import com.azure.resourcemanager.network.generated.implementation.LocalNetworkGatewaysImpl;
import com.azure.resourcemanager.network.generated.implementation.ManagementGroupNetworkManagerConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.NatGatewaysImpl;
import com.azure.resourcemanager.network.generated.implementation.NatRulesImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkGroupsImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkInterfaceIpConfigurationsImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkInterfaceLoadBalancersImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkInterfaceTapConfigurationsImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkInterfacesImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkManagementClientBuilder;
import com.azure.resourcemanager.network.generated.implementation.NetworkManagerCommitsImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkManagerDeploymentStatusOperationsImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkManagersImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkProfilesImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkSecurityGroupsImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkVirtualAppliancesImpl;
import com.azure.resourcemanager.network.generated.implementation.NetworkWatchersImpl;
import com.azure.resourcemanager.network.generated.implementation.OperationsImpl;
import com.azure.resourcemanager.network.generated.implementation.P2SVpnGatewaysImpl;
import com.azure.resourcemanager.network.generated.implementation.PacketCapturesImpl;
import com.azure.resourcemanager.network.generated.implementation.PeerExpressRouteCircuitConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.PrivateDnsZoneGroupsImpl;
import com.azure.resourcemanager.network.generated.implementation.PrivateEndpointsImpl;
import com.azure.resourcemanager.network.generated.implementation.PrivateLinkServicesImpl;
import com.azure.resourcemanager.network.generated.implementation.PublicIpAddressesImpl;
import com.azure.resourcemanager.network.generated.implementation.PublicIpPrefixesImpl;
import com.azure.resourcemanager.network.generated.implementation.ResourceNavigationLinksImpl;
import com.azure.resourcemanager.network.generated.implementation.ResourceProvidersImpl;
import com.azure.resourcemanager.network.generated.implementation.RouteFilterRulesImpl;
import com.azure.resourcemanager.network.generated.implementation.RouteFiltersImpl;
import com.azure.resourcemanager.network.generated.implementation.RouteTablesImpl;
import com.azure.resourcemanager.network.generated.implementation.RoutesImpl;
import com.azure.resourcemanager.network.generated.implementation.RoutingIntentsImpl;
import com.azure.resourcemanager.network.generated.implementation.ScopeConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.SecurityAdminConfigurationsImpl;
import com.azure.resourcemanager.network.generated.implementation.SecurityPartnerProvidersImpl;
import com.azure.resourcemanager.network.generated.implementation.SecurityRulesImpl;
import com.azure.resourcemanager.network.generated.implementation.ServiceAssociationLinksImpl;
import com.azure.resourcemanager.network.generated.implementation.ServiceEndpointPoliciesImpl;
import com.azure.resourcemanager.network.generated.implementation.ServiceEndpointPolicyDefinitionsImpl;
import com.azure.resourcemanager.network.generated.implementation.ServiceTagInformationsImpl;
import com.azure.resourcemanager.network.generated.implementation.ServiceTagsImpl;
import com.azure.resourcemanager.network.generated.implementation.StaticMembersImpl;
import com.azure.resourcemanager.network.generated.implementation.SubnetsImpl;
import com.azure.resourcemanager.network.generated.implementation.SubscriptionNetworkManagerConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.UsagesImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualApplianceSitesImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualApplianceSkusImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualHubBgpConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualHubIpConfigurationsImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualHubRouteTableV2SImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualHubsImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualNetworkGatewayConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualNetworkGatewayNatRulesImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualNetworkGatewaysImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualNetworkPeeringsImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualNetworkTapsImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualNetworksImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualRouterPeeringsImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualRoutersImpl;
import com.azure.resourcemanager.network.generated.implementation.VirtualWansImpl;
import com.azure.resourcemanager.network.generated.implementation.VpnConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.VpnGatewaysImpl;
import com.azure.resourcemanager.network.generated.implementation.VpnLinkConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.VpnServerConfigurationsAssociatedWithVirtualWansImpl;
import com.azure.resourcemanager.network.generated.implementation.VpnServerConfigurationsImpl;
import com.azure.resourcemanager.network.generated.implementation.VpnSiteLinkConnectionsImpl;
import com.azure.resourcemanager.network.generated.implementation.VpnSiteLinksImpl;
import com.azure.resourcemanager.network.generated.implementation.VpnSitesConfigurationsImpl;
import com.azure.resourcemanager.network.generated.implementation.VpnSitesImpl;
import com.azure.resourcemanager.network.generated.implementation.WebApplicationFirewallPoliciesImpl;
import com.azure.resourcemanager.network.generated.implementation.WebCategoriesImpl;
import com.azure.resourcemanager.network.generated.models.AdminRuleCollections;
import com.azure.resourcemanager.network.generated.models.AdminRules;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayPrivateEndpointConnections;
import com.azure.resourcemanager.network.generated.models.ApplicationGatewayPrivateLinkResources;
import com.azure.resourcemanager.network.generated.models.ApplicationGateways;
import com.azure.resourcemanager.network.generated.models.ApplicationSecurityGroups;
import com.azure.resourcemanager.network.generated.models.AvailableDelegations;
import com.azure.resourcemanager.network.generated.models.AvailableEndpointServices;
import com.azure.resourcemanager.network.generated.models.AvailablePrivateEndpointTypes;
import com.azure.resourcemanager.network.generated.models.AvailableResourceGroupDelegations;
import com.azure.resourcemanager.network.generated.models.AvailableServiceAliases;
import com.azure.resourcemanager.network.generated.models.AzureFirewallFqdnTags;
import com.azure.resourcemanager.network.generated.models.AzureFirewalls;
import com.azure.resourcemanager.network.generated.models.BastionHosts;
import com.azure.resourcemanager.network.generated.models.BgpServiceCommunities;
import com.azure.resourcemanager.network.generated.models.ConfigurationPolicyGroups;
import com.azure.resourcemanager.network.generated.models.ConnectionMonitors;
import com.azure.resourcemanager.network.generated.models.ConnectivityConfigurations;
import com.azure.resourcemanager.network.generated.models.CustomIpPrefixes;
import com.azure.resourcemanager.network.generated.models.DdosCustomPolicies;
import com.azure.resourcemanager.network.generated.models.DdosProtectionPlans;
import com.azure.resourcemanager.network.generated.models.DefaultSecurityRules;
import com.azure.resourcemanager.network.generated.models.DscpConfigurations;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitAuthorizations;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitConnections;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitPeerings;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuits;
import com.azure.resourcemanager.network.generated.models.ExpressRouteConnections;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCrossConnectionPeerings;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCrossConnections;
import com.azure.resourcemanager.network.generated.models.ExpressRouteGateways;
import com.azure.resourcemanager.network.generated.models.ExpressRouteLinks;
import com.azure.resourcemanager.network.generated.models.ExpressRoutePortAuthorizations;
import com.azure.resourcemanager.network.generated.models.ExpressRoutePorts;
import com.azure.resourcemanager.network.generated.models.ExpressRoutePortsLocations;
import com.azure.resourcemanager.network.generated.models.ExpressRouteProviderPortsLocations;
import com.azure.resourcemanager.network.generated.models.ExpressRouteServiceProviders;
import com.azure.resourcemanager.network.generated.models.FirewallPolicies;
import com.azure.resourcemanager.network.generated.models.FirewallPolicyIdpsSignatures;
import com.azure.resourcemanager.network.generated.models.FirewallPolicyIdpsSignaturesFilterValues;
import com.azure.resourcemanager.network.generated.models.FirewallPolicyIdpsSignaturesOverrides;
import com.azure.resourcemanager.network.generated.models.FirewallPolicyRuleCollectionGroups;
import com.azure.resourcemanager.network.generated.models.FlowLogs;
import com.azure.resourcemanager.network.generated.models.HubRouteTables;
import com.azure.resourcemanager.network.generated.models.HubVirtualNetworkConnections;
import com.azure.resourcemanager.network.generated.models.InboundNatRules;
import com.azure.resourcemanager.network.generated.models.InboundSecurityRuleOperations;
import com.azure.resourcemanager.network.generated.models.IpAllocations;
import com.azure.resourcemanager.network.generated.models.IpGroups;
import com.azure.resourcemanager.network.generated.models.LoadBalancerBackendAddressPools;
import com.azure.resourcemanager.network.generated.models.LoadBalancerFrontendIpConfigurations;
import com.azure.resourcemanager.network.generated.models.LoadBalancerLoadBalancingRules;
import com.azure.resourcemanager.network.generated.models.LoadBalancerNetworkInterfaces;
import com.azure.resourcemanager.network.generated.models.LoadBalancerOutboundRules;
import com.azure.resourcemanager.network.generated.models.LoadBalancerProbes;
import com.azure.resourcemanager.network.generated.models.LoadBalancers;
import com.azure.resourcemanager.network.generated.models.LocalNetworkGateways;
import com.azure.resourcemanager.network.generated.models.ManagementGroupNetworkManagerConnections;
import com.azure.resourcemanager.network.generated.models.NatGateways;
import com.azure.resourcemanager.network.generated.models.NatRules;
import com.azure.resourcemanager.network.generated.models.NetworkGroups;
import com.azure.resourcemanager.network.generated.models.NetworkInterfaceIpConfigurations;
import com.azure.resourcemanager.network.generated.models.NetworkInterfaceLoadBalancers;
import com.azure.resourcemanager.network.generated.models.NetworkInterfaceTapConfigurations;
import com.azure.resourcemanager.network.generated.models.NetworkInterfaces;
import com.azure.resourcemanager.network.generated.models.NetworkManagerCommits;
import com.azure.resourcemanager.network.generated.models.NetworkManagerDeploymentStatusOperations;
import com.azure.resourcemanager.network.generated.models.NetworkManagers;
import com.azure.resourcemanager.network.generated.models.NetworkProfiles;
import com.azure.resourcemanager.network.generated.models.NetworkSecurityGroups;
import com.azure.resourcemanager.network.generated.models.NetworkVirtualAppliances;
import com.azure.resourcemanager.network.generated.models.NetworkWatchers;
import com.azure.resourcemanager.network.generated.models.Operations;
import com.azure.resourcemanager.network.generated.models.P2SVpnGateways;
import com.azure.resourcemanager.network.generated.models.PacketCaptures;
import com.azure.resourcemanager.network.generated.models.PeerExpressRouteCircuitConnections;
import com.azure.resourcemanager.network.generated.models.PrivateDnsZoneGroups;
import com.azure.resourcemanager.network.generated.models.PrivateEndpoints;
import com.azure.resourcemanager.network.generated.models.PrivateLinkServices;
import com.azure.resourcemanager.network.generated.models.PublicIpAddresses;
import com.azure.resourcemanager.network.generated.models.PublicIpPrefixes;
import com.azure.resourcemanager.network.generated.models.ResourceNavigationLinks;
import com.azure.resourcemanager.network.generated.models.ResourceProviders;
import com.azure.resourcemanager.network.generated.models.RouteFilterRules;
import com.azure.resourcemanager.network.generated.models.RouteFilters;
import com.azure.resourcemanager.network.generated.models.RouteTables;
import com.azure.resourcemanager.network.generated.models.Routes;
import com.azure.resourcemanager.network.generated.models.RoutingIntents;
import com.azure.resourcemanager.network.generated.models.ScopeConnections;
import com.azure.resourcemanager.network.generated.models.SecurityAdminConfigurations;
import com.azure.resourcemanager.network.generated.models.SecurityPartnerProviders;
import com.azure.resourcemanager.network.generated.models.SecurityRules;
import com.azure.resourcemanager.network.generated.models.ServiceAssociationLinks;
import com.azure.resourcemanager.network.generated.models.ServiceEndpointPolicies;
import com.azure.resourcemanager.network.generated.models.ServiceEndpointPolicyDefinitions;
import com.azure.resourcemanager.network.generated.models.ServiceTagInformations;
import com.azure.resourcemanager.network.generated.models.ServiceTags;
import com.azure.resourcemanager.network.generated.models.StaticMembers;
import com.azure.resourcemanager.network.generated.models.Subnets;
import com.azure.resourcemanager.network.generated.models.SubscriptionNetworkManagerConnections;
import com.azure.resourcemanager.network.generated.models.Usages;
import com.azure.resourcemanager.network.generated.models.VirtualApplianceSites;
import com.azure.resourcemanager.network.generated.models.VirtualApplianceSkus;
import com.azure.resourcemanager.network.generated.models.VirtualHubBgpConnections;
import com.azure.resourcemanager.network.generated.models.VirtualHubIpConfigurations;
import com.azure.resourcemanager.network.generated.models.VirtualHubRouteTableV2S;
import com.azure.resourcemanager.network.generated.models.VirtualHubs;
import com.azure.resourcemanager.network.generated.models.VirtualNetworkGatewayConnections;
import com.azure.resourcemanager.network.generated.models.VirtualNetworkGatewayNatRules;
import com.azure.resourcemanager.network.generated.models.VirtualNetworkGateways;
import com.azure.resourcemanager.network.generated.models.VirtualNetworkPeerings;
import com.azure.resourcemanager.network.generated.models.VirtualNetworkTaps;
import com.azure.resourcemanager.network.generated.models.VirtualNetworks;
import com.azure.resourcemanager.network.generated.models.VirtualRouterPeerings;
import com.azure.resourcemanager.network.generated.models.VirtualRouters;
import com.azure.resourcemanager.network.generated.models.VirtualWans;
import com.azure.resourcemanager.network.generated.models.VpnConnections;
import com.azure.resourcemanager.network.generated.models.VpnGateways;
import com.azure.resourcemanager.network.generated.models.VpnLinkConnections;
import com.azure.resourcemanager.network.generated.models.VpnServerConfigurations;
import com.azure.resourcemanager.network.generated.models.VpnServerConfigurationsAssociatedWithVirtualWans;
import com.azure.resourcemanager.network.generated.models.VpnSiteLinkConnections;
import com.azure.resourcemanager.network.generated.models.VpnSiteLinks;
import com.azure.resourcemanager.network.generated.models.VpnSites;
import com.azure.resourcemanager.network.generated.models.VpnSitesConfigurations;
import com.azure.resourcemanager.network.generated.models.WebApplicationFirewallPolicies;
import com.azure.resourcemanager.network.generated.models.WebCategories;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

/** Entry point to NetworkManager. Network Client. */
public final class NetworkManager {
    private ApplicationGateways applicationGateways;

    private ApplicationGatewayPrivateLinkResources applicationGatewayPrivateLinkResources;

    private ApplicationGatewayPrivateEndpointConnections applicationGatewayPrivateEndpointConnections;

    private ApplicationSecurityGroups applicationSecurityGroups;

    private AvailableDelegations availableDelegations;

    private AvailableResourceGroupDelegations availableResourceGroupDelegations;

    private AvailableServiceAliases availableServiceAliases;

    private AzureFirewalls azureFirewalls;

    private AzureFirewallFqdnTags azureFirewallFqdnTags;

    private WebCategories webCategories;

    private BastionHosts bastionHosts;

    private ResourceProviders resourceProviders;

    private NetworkInterfaces networkInterfaces;

    private PublicIpAddresses publicIpAddresses;

    private CustomIpPrefixes customIpPrefixes;

    private DdosCustomPolicies ddosCustomPolicies;

    private DdosProtectionPlans ddosProtectionPlans;

    private DscpConfigurations dscpConfigurations;

    private AvailableEndpointServices availableEndpointServices;

    private ExpressRouteCircuitAuthorizations expressRouteCircuitAuthorizations;

    private ExpressRouteCircuitPeerings expressRouteCircuitPeerings;

    private ExpressRouteCircuitConnections expressRouteCircuitConnections;

    private PeerExpressRouteCircuitConnections peerExpressRouteCircuitConnections;

    private ExpressRouteCircuits expressRouteCircuits;

    private ExpressRouteServiceProviders expressRouteServiceProviders;

    private ExpressRouteCrossConnections expressRouteCrossConnections;

    private ExpressRouteCrossConnectionPeerings expressRouteCrossConnectionPeerings;

    private ExpressRoutePortsLocations expressRoutePortsLocations;

    private ExpressRoutePorts expressRoutePorts;

    private ExpressRouteLinks expressRouteLinks;

    private ExpressRoutePortAuthorizations expressRoutePortAuthorizations;

    private FirewallPolicies firewallPolicies;

    private FirewallPolicyRuleCollectionGroups firewallPolicyRuleCollectionGroups;

    private FirewallPolicyIdpsSignatures firewallPolicyIdpsSignatures;

    private FirewallPolicyIdpsSignaturesOverrides firewallPolicyIdpsSignaturesOverrides;

    private FirewallPolicyIdpsSignaturesFilterValues firewallPolicyIdpsSignaturesFilterValues;

    private IpAllocations ipAllocations;

    private IpGroups ipGroups;

    private LoadBalancers loadBalancers;

    private LoadBalancerBackendAddressPools loadBalancerBackendAddressPools;

    private LoadBalancerFrontendIpConfigurations loadBalancerFrontendIpConfigurations;

    private InboundNatRules inboundNatRules;

    private LoadBalancerLoadBalancingRules loadBalancerLoadBalancingRules;

    private LoadBalancerOutboundRules loadBalancerOutboundRules;

    private LoadBalancerNetworkInterfaces loadBalancerNetworkInterfaces;

    private LoadBalancerProbes loadBalancerProbes;

    private NatGateways natGateways;

    private NetworkInterfaceIpConfigurations networkInterfaceIpConfigurations;

    private NetworkInterfaceLoadBalancers networkInterfaceLoadBalancers;

    private NetworkInterfaceTapConfigurations networkInterfaceTapConfigurations;

    private NetworkManagers networkManagers;

    private NetworkManagerCommits networkManagerCommits;

    private NetworkManagerDeploymentStatusOperations networkManagerDeploymentStatusOperations;

    private SubscriptionNetworkManagerConnections subscriptionNetworkManagerConnections;

    private ManagementGroupNetworkManagerConnections managementGroupNetworkManagerConnections;

    private ConnectivityConfigurations connectivityConfigurations;

    private NetworkGroups networkGroups;

    private StaticMembers staticMembers;

    private ScopeConnections scopeConnections;

    private SecurityAdminConfigurations securityAdminConfigurations;

    private AdminRuleCollections adminRuleCollections;

    private AdminRules adminRules;

    private NetworkProfiles networkProfiles;

    private NetworkSecurityGroups networkSecurityGroups;

    private SecurityRules securityRules;

    private DefaultSecurityRules defaultSecurityRules;

    private NetworkVirtualAppliances networkVirtualAppliances;

    private VirtualApplianceSites virtualApplianceSites;

    private VirtualApplianceSkus virtualApplianceSkus;

    private InboundSecurityRuleOperations inboundSecurityRuleOperations;

    private NetworkWatchers networkWatchers;

    private PacketCaptures packetCaptures;

    private ConnectionMonitors connectionMonitors;

    private FlowLogs flowLogs;

    private Operations operations;

    private PrivateEndpoints privateEndpoints;

    private AvailablePrivateEndpointTypes availablePrivateEndpointTypes;

    private PrivateDnsZoneGroups privateDnsZoneGroups;

    private PrivateLinkServices privateLinkServices;

    private PublicIpPrefixes publicIpPrefixes;

    private RouteFilters routeFilters;

    private RouteFilterRules routeFilterRules;

    private RouteTables routeTables;

    private Routes routes;

    private SecurityPartnerProviders securityPartnerProviders;

    private BgpServiceCommunities bgpServiceCommunities;

    private ServiceEndpointPolicies serviceEndpointPolicies;

    private ServiceEndpointPolicyDefinitions serviceEndpointPolicyDefinitions;

    private ServiceTags serviceTags;

    private ServiceTagInformations serviceTagInformations;

    private Usages usages;

    private VirtualNetworks virtualNetworks;

    private Subnets subnets;

    private ResourceNavigationLinks resourceNavigationLinks;

    private ServiceAssociationLinks serviceAssociationLinks;

    private VirtualNetworkPeerings virtualNetworkPeerings;

    private VirtualNetworkGateways virtualNetworkGateways;

    private VirtualNetworkGatewayConnections virtualNetworkGatewayConnections;

    private LocalNetworkGateways localNetworkGateways;

    private VirtualNetworkGatewayNatRules virtualNetworkGatewayNatRules;

    private VirtualNetworkTaps virtualNetworkTaps;

    private VirtualRouters virtualRouters;

    private VirtualRouterPeerings virtualRouterPeerings;

    private VirtualWans virtualWans;

    private VpnSites vpnSites;

    private VpnSiteLinks vpnSiteLinks;

    private VpnSitesConfigurations vpnSitesConfigurations;

    private VpnServerConfigurations vpnServerConfigurations;

    private ConfigurationPolicyGroups configurationPolicyGroups;

    private VirtualHubs virtualHubs;

    private HubVirtualNetworkConnections hubVirtualNetworkConnections;

    private VpnGateways vpnGateways;

    private VpnLinkConnections vpnLinkConnections;

    private VpnConnections vpnConnections;

    private VpnSiteLinkConnections vpnSiteLinkConnections;

    private NatRules natRules;

    private P2SVpnGateways p2SVpnGateways;

    private VpnServerConfigurationsAssociatedWithVirtualWans vpnServerConfigurationsAssociatedWithVirtualWans;

    private VirtualHubRouteTableV2S virtualHubRouteTableV2S;

    private ExpressRouteGateways expressRouteGateways;

    private ExpressRouteConnections expressRouteConnections;

    private VirtualHubBgpConnections virtualHubBgpConnections;

    private VirtualHubIpConfigurations virtualHubIpConfigurations;

    private HubRouteTables hubRouteTables;

    private RoutingIntents routingIntents;

    private WebApplicationFirewallPolicies webApplicationFirewallPolicies;

    private ExpressRouteProviderPortsLocations expressRouteProviderPortsLocations;

    private final NetworkManagementClient clientObject;

    private NetworkManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        this.clientObject =
            new NetworkManagementClientBuilder()
                .pipeline(httpPipeline)
                .endpoint(profile.getEnvironment().getResourceManagerEndpoint())
                .subscriptionId(profile.getSubscriptionId())
                .defaultPollInterval(defaultPollInterval)
                .buildClient();
    }

    /**
     * Creates an instance of Network service API entry point.
     *
     * @param credential the credential to use.
     * @param profile the Azure profile for client.
     * @return the Network service API instance.
     */
    public static NetworkManager authenticate(TokenCredential credential, AzureProfile profile) {
        Objects.requireNonNull(credential, "'credential' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return configure().authenticate(credential, profile);
    }

    /**
     * Creates an instance of Network service API entry point.
     *
     * @param httpPipeline the {@link HttpPipeline} configured with Azure authentication credential.
     * @param profile the Azure profile for client.
     * @return the Network service API instance.
     */
    public static NetworkManager authenticate(HttpPipeline httpPipeline, AzureProfile profile) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return new NetworkManager(httpPipeline, profile, null);
    }

    /**
     * Gets a Configurable instance that can be used to create NetworkManager with optional configuration.
     *
     * @return the Configurable instance allowing configurations.
     */
    public static Configurable configure() {
        return new NetworkManager.Configurable();
    }

    /** The Configurable allowing configurations to be set. */
    public static final class Configurable {
        private static final ClientLogger LOGGER = new ClientLogger(Configurable.class);

        private HttpClient httpClient;
        private HttpLogOptions httpLogOptions;
        private final List<HttpPipelinePolicy> policies = new ArrayList<>();
        private final List<String> scopes = new ArrayList<>();
        private RetryPolicy retryPolicy;
        private RetryOptions retryOptions;
        private Duration defaultPollInterval;

        private Configurable() {
        }

        /**
         * Sets the http client.
         *
         * @param httpClient the HTTP client.
         * @return the configurable object itself.
         */
        public Configurable withHttpClient(HttpClient httpClient) {
            this.httpClient = Objects.requireNonNull(httpClient, "'httpClient' cannot be null.");
            return this;
        }

        /**
         * Sets the logging options to the HTTP pipeline.
         *
         * @param httpLogOptions the HTTP log options.
         * @return the configurable object itself.
         */
        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {
            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, "'httpLogOptions' cannot be null.");
            return this;
        }

        /**
         * Adds the pipeline policy to the HTTP pipeline.
         *
         * @param policy the HTTP pipeline policy.
         * @return the configurable object itself.
         */
        public Configurable withPolicy(HttpPipelinePolicy policy) {
            this.policies.add(Objects.requireNonNull(policy, "'policy' cannot be null."));
            return this;
        }

        /**
         * Adds the scope to permission sets.
         *
         * @param scope the scope.
         * @return the configurable object itself.
         */
        public Configurable withScope(String scope) {
            this.scopes.add(Objects.requireNonNull(scope, "'scope' cannot be null."));
            return this;
        }

        /**
         * Sets the retry policy to the HTTP pipeline.
         *
         * @param retryPolicy the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {
            this.retryPolicy = Objects.requireNonNull(retryPolicy, "'retryPolicy' cannot be null.");
            return this;
        }

        /**
         * Sets the retry options for the HTTP pipeline retry policy.
         *
         * <p>This setting has no effect, if retry policy is set via {@link #withRetryPolicy(RetryPolicy)}.
         *
         * @param retryOptions the retry options for the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryOptions(RetryOptions retryOptions) {
            this.retryOptions = Objects.requireNonNull(retryOptions, "'retryOptions' cannot be null.");
            return this;
        }

        /**
         * Sets the default poll interval, used when service does not provide "Retry-After" header.
         *
         * @param defaultPollInterval the default poll interval.
         * @return the configurable object itself.
         */
        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {
            this.defaultPollInterval =
                Objects.requireNonNull(defaultPollInterval, "'defaultPollInterval' cannot be null.");
            if (this.defaultPollInterval.isNegative()) {
                throw LOGGER
                    .logExceptionAsError(new IllegalArgumentException("'defaultPollInterval' cannot be negative"));
            }
            return this;
        }

        /**
         * Creates an instance of Network service API entry point.
         *
         * @param credential the credential to use.
         * @param profile the Azure profile for client.
         * @return the Network service API instance.
         */
        public NetworkManager authenticate(TokenCredential credential, AzureProfile profile) {
            Objects.requireNonNull(credential, "'credential' cannot be null.");
            Objects.requireNonNull(profile, "'profile' cannot be null.");

            StringBuilder userAgentBuilder = new StringBuilder();
            userAgentBuilder
                .append("azsdk-java")
                .append("-")
                .append("com.azure.resourcemanager.network.generated")
                .append("/")
                .append("1.0.0-beta.1");
            if (!Configuration.getGlobalConfiguration().get("AZURE_TELEMETRY_DISABLED", false)) {
                userAgentBuilder
                    .append(" (")
                    .append(Configuration.getGlobalConfiguration().get("java.version"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.name"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.version"))
                    .append("; auto-generated)");
            } else {
                userAgentBuilder.append(" (auto-generated)");
            }

            if (scopes.isEmpty()) {
                scopes.add(profile.getEnvironment().getManagementEndpoint() + "/.default");
            }
            if (retryPolicy == null) {
                if (retryOptions != null) {
                    retryPolicy = new RetryPolicy(retryOptions);
                } else {
                    retryPolicy = new RetryPolicy("Retry-After", ChronoUnit.SECONDS);
                }
            }
            List<HttpPipelinePolicy> policies = new ArrayList<>();
            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));
            policies.add(new AddHeadersFromContextPolicy());
            policies.add(new RequestIdPolicy());
            policies
                .addAll(
                    this
                        .policies
                        .stream()
                        .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_CALL)
                        .collect(Collectors.toList()));
            HttpPolicyProviders.addBeforeRetryPolicies(policies);
            policies.add(retryPolicy);
            policies.add(new AddDatePolicy());
            policies.add(new ArmChallengeAuthenticationPolicy(credential, scopes.toArray(new String[0])));
            policies
                .addAll(
                    this
                        .policies
                        .stream()
                        .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_RETRY)
                        .collect(Collectors.toList()));
            HttpPolicyProviders.addAfterRetryPolicies(policies);
            policies.add(new HttpLoggingPolicy(httpLogOptions));
            HttpPipeline httpPipeline =
                new HttpPipelineBuilder()
                    .httpClient(httpClient)
                    .policies(policies.toArray(new HttpPipelinePolicy[0]))
                    .build();
            return new NetworkManager(httpPipeline, profile, defaultPollInterval);
        }
    }

    /**
     * Gets the resource collection API of ApplicationGateways. It manages ApplicationGateway.
     *
     * @return Resource collection API of ApplicationGateways.
     */
    public ApplicationGateways applicationGateways() {
        if (this.applicationGateways == null) {
            this.applicationGateways = new ApplicationGatewaysImpl(clientObject.getApplicationGateways(), this);
        }
        return applicationGateways;
    }

    /**
     * Gets the resource collection API of ApplicationGatewayPrivateLinkResources.
     *
     * @return Resource collection API of ApplicationGatewayPrivateLinkResources.
     */
    public ApplicationGatewayPrivateLinkResources applicationGatewayPrivateLinkResources() {
        if (this.applicationGatewayPrivateLinkResources == null) {
            this.applicationGatewayPrivateLinkResources =
                new ApplicationGatewayPrivateLinkResourcesImpl(
                    clientObject.getApplicationGatewayPrivateLinkResources(), this);
        }
        return applicationGatewayPrivateLinkResources;
    }

    /**
     * Gets the resource collection API of ApplicationGatewayPrivateEndpointConnections.
     *
     * @return Resource collection API of ApplicationGatewayPrivateEndpointConnections.
     */
    public ApplicationGatewayPrivateEndpointConnections applicationGatewayPrivateEndpointConnections() {
        if (this.applicationGatewayPrivateEndpointConnections == null) {
            this.applicationGatewayPrivateEndpointConnections =
                new ApplicationGatewayPrivateEndpointConnectionsImpl(
                    clientObject.getApplicationGatewayPrivateEndpointConnections(), this);
        }
        return applicationGatewayPrivateEndpointConnections;
    }

    /**
     * Gets the resource collection API of ApplicationSecurityGroups. It manages ApplicationSecurityGroup.
     *
     * @return Resource collection API of ApplicationSecurityGroups.
     */
    public ApplicationSecurityGroups applicationSecurityGroups() {
        if (this.applicationSecurityGroups == null) {
            this.applicationSecurityGroups =
                new ApplicationSecurityGroupsImpl(clientObject.getApplicationSecurityGroups(), this);
        }
        return applicationSecurityGroups;
    }

    /**
     * Gets the resource collection API of AvailableDelegations.
     *
     * @return Resource collection API of AvailableDelegations.
     */
    public AvailableDelegations availableDelegations() {
        if (this.availableDelegations == null) {
            this.availableDelegations = new AvailableDelegationsImpl(clientObject.getAvailableDelegations(), this);
        }
        return availableDelegations;
    }

    /**
     * Gets the resource collection API of AvailableResourceGroupDelegations.
     *
     * @return Resource collection API of AvailableResourceGroupDelegations.
     */
    public AvailableResourceGroupDelegations availableResourceGroupDelegations() {
        if (this.availableResourceGroupDelegations == null) {
            this.availableResourceGroupDelegations =
                new AvailableResourceGroupDelegationsImpl(clientObject.getAvailableResourceGroupDelegations(), this);
        }
        return availableResourceGroupDelegations;
    }

    /**
     * Gets the resource collection API of AvailableServiceAliases.
     *
     * @return Resource collection API of AvailableServiceAliases.
     */
    public AvailableServiceAliases availableServiceAliases() {
        if (this.availableServiceAliases == null) {
            this.availableServiceAliases =
                new AvailableServiceAliasesImpl(clientObject.getAvailableServiceAliases(), this);
        }
        return availableServiceAliases;
    }

    /**
     * Gets the resource collection API of AzureFirewalls. It manages AzureFirewall.
     *
     * @return Resource collection API of AzureFirewalls.
     */
    public AzureFirewalls azureFirewalls() {
        if (this.azureFirewalls == null) {
            this.azureFirewalls = new AzureFirewallsImpl(clientObject.getAzureFirewalls(), this);
        }
        return azureFirewalls;
    }

    /**
     * Gets the resource collection API of AzureFirewallFqdnTags.
     *
     * @return Resource collection API of AzureFirewallFqdnTags.
     */
    public AzureFirewallFqdnTags azureFirewallFqdnTags() {
        if (this.azureFirewallFqdnTags == null) {
            this.azureFirewallFqdnTags = new AzureFirewallFqdnTagsImpl(clientObject.getAzureFirewallFqdnTags(), this);
        }
        return azureFirewallFqdnTags;
    }

    /**
     * Gets the resource collection API of WebCategories.
     *
     * @return Resource collection API of WebCategories.
     */
    public WebCategories webCategories() {
        if (this.webCategories == null) {
            this.webCategories = new WebCategoriesImpl(clientObject.getWebCategories(), this);
        }
        return webCategories;
    }

    /**
     * Gets the resource collection API of BastionHosts. It manages BastionHost.
     *
     * @return Resource collection API of BastionHosts.
     */
    public BastionHosts bastionHosts() {
        if (this.bastionHosts == null) {
            this.bastionHosts = new BastionHostsImpl(clientObject.getBastionHosts(), this);
        }
        return bastionHosts;
    }

    /**
     * Gets the resource collection API of ResourceProviders.
     *
     * @return Resource collection API of ResourceProviders.
     */
    public ResourceProviders resourceProviders() {
        if (this.resourceProviders == null) {
            this.resourceProviders = new ResourceProvidersImpl(clientObject.getResourceProviders(), this);
        }
        return resourceProviders;
    }

    /**
     * Gets the resource collection API of NetworkInterfaces. It manages NetworkInterface.
     *
     * @return Resource collection API of NetworkInterfaces.
     */
    public NetworkInterfaces networkInterfaces() {
        if (this.networkInterfaces == null) {
            this.networkInterfaces = new NetworkInterfacesImpl(clientObject.getNetworkInterfaces(), this);
        }
        return networkInterfaces;
    }

    /**
     * Gets the resource collection API of PublicIpAddresses. It manages PublicIpAddress.
     *
     * @return Resource collection API of PublicIpAddresses.
     */
    public PublicIpAddresses publicIpAddresses() {
        if (this.publicIpAddresses == null) {
            this.publicIpAddresses = new PublicIpAddressesImpl(clientObject.getPublicIpAddresses(), this);
        }
        return publicIpAddresses;
    }

    /**
     * Gets the resource collection API of CustomIpPrefixes. It manages CustomIpPrefix.
     *
     * @return Resource collection API of CustomIpPrefixes.
     */
    public CustomIpPrefixes customIpPrefixes() {
        if (this.customIpPrefixes == null) {
            this.customIpPrefixes = new CustomIpPrefixesImpl(clientObject.getCustomIpPrefixes(), this);
        }
        return customIpPrefixes;
    }

    /**
     * Gets the resource collection API of DdosCustomPolicies. It manages DdosCustomPolicy.
     *
     * @return Resource collection API of DdosCustomPolicies.
     */
    public DdosCustomPolicies ddosCustomPolicies() {
        if (this.ddosCustomPolicies == null) {
            this.ddosCustomPolicies = new DdosCustomPoliciesImpl(clientObject.getDdosCustomPolicies(), this);
        }
        return ddosCustomPolicies;
    }

    /**
     * Gets the resource collection API of DdosProtectionPlans. It manages DdosProtectionPlan.
     *
     * @return Resource collection API of DdosProtectionPlans.
     */
    public DdosProtectionPlans ddosProtectionPlans() {
        if (this.ddosProtectionPlans == null) {
            this.ddosProtectionPlans = new DdosProtectionPlansImpl(clientObject.getDdosProtectionPlans(), this);
        }
        return ddosProtectionPlans;
    }

    /**
     * Gets the resource collection API of DscpConfigurations. It manages DscpConfiguration.
     *
     * @return Resource collection API of DscpConfigurations.
     */
    public DscpConfigurations dscpConfigurations() {
        if (this.dscpConfigurations == null) {
            this.dscpConfigurations = new DscpConfigurationsImpl(clientObject.getDscpConfigurations(), this);
        }
        return dscpConfigurations;
    }

    /**
     * Gets the resource collection API of AvailableEndpointServices.
     *
     * @return Resource collection API of AvailableEndpointServices.
     */
    public AvailableEndpointServices availableEndpointServices() {
        if (this.availableEndpointServices == null) {
            this.availableEndpointServices =
                new AvailableEndpointServicesImpl(clientObject.getAvailableEndpointServices(), this);
        }
        return availableEndpointServices;
    }

    /**
     * Gets the resource collection API of ExpressRouteCircuitAuthorizations. It manages
     * ExpressRouteCircuitAuthorization.
     *
     * @return Resource collection API of ExpressRouteCircuitAuthorizations.
     */
    public ExpressRouteCircuitAuthorizations expressRouteCircuitAuthorizations() {
        if (this.expressRouteCircuitAuthorizations == null) {
            this.expressRouteCircuitAuthorizations =
                new ExpressRouteCircuitAuthorizationsImpl(clientObject.getExpressRouteCircuitAuthorizations(), this);
        }
        return expressRouteCircuitAuthorizations;
    }

    /**
     * Gets the resource collection API of ExpressRouteCircuitPeerings. It manages ExpressRouteCircuitPeering.
     *
     * @return Resource collection API of ExpressRouteCircuitPeerings.
     */
    public ExpressRouteCircuitPeerings expressRouteCircuitPeerings() {
        if (this.expressRouteCircuitPeerings == null) {
            this.expressRouteCircuitPeerings =
                new ExpressRouteCircuitPeeringsImpl(clientObject.getExpressRouteCircuitPeerings(), this);
        }
        return expressRouteCircuitPeerings;
    }

    /**
     * Gets the resource collection API of ExpressRouteCircuitConnections. It manages ExpressRouteCircuitConnection.
     *
     * @return Resource collection API of ExpressRouteCircuitConnections.
     */
    public ExpressRouteCircuitConnections expressRouteCircuitConnections() {
        if (this.expressRouteCircuitConnections == null) {
            this.expressRouteCircuitConnections =
                new ExpressRouteCircuitConnectionsImpl(clientObject.getExpressRouteCircuitConnections(), this);
        }
        return expressRouteCircuitConnections;
    }

    /**
     * Gets the resource collection API of PeerExpressRouteCircuitConnections.
     *
     * @return Resource collection API of PeerExpressRouteCircuitConnections.
     */
    public PeerExpressRouteCircuitConnections peerExpressRouteCircuitConnections() {
        if (this.peerExpressRouteCircuitConnections == null) {
            this.peerExpressRouteCircuitConnections =
                new PeerExpressRouteCircuitConnectionsImpl(clientObject.getPeerExpressRouteCircuitConnections(), this);
        }
        return peerExpressRouteCircuitConnections;
    }

    /**
     * Gets the resource collection API of ExpressRouteCircuits. It manages ExpressRouteCircuit.
     *
     * @return Resource collection API of ExpressRouteCircuits.
     */
    public ExpressRouteCircuits expressRouteCircuits() {
        if (this.expressRouteCircuits == null) {
            this.expressRouteCircuits = new ExpressRouteCircuitsImpl(clientObject.getExpressRouteCircuits(), this);
        }
        return expressRouteCircuits;
    }

    /**
     * Gets the resource collection API of ExpressRouteServiceProviders.
     *
     * @return Resource collection API of ExpressRouteServiceProviders.
     */
    public ExpressRouteServiceProviders expressRouteServiceProviders() {
        if (this.expressRouteServiceProviders == null) {
            this.expressRouteServiceProviders =
                new ExpressRouteServiceProvidersImpl(clientObject.getExpressRouteServiceProviders(), this);
        }
        return expressRouteServiceProviders;
    }

    /**
     * Gets the resource collection API of ExpressRouteCrossConnections. It manages ExpressRouteCrossConnection.
     *
     * @return Resource collection API of ExpressRouteCrossConnections.
     */
    public ExpressRouteCrossConnections expressRouteCrossConnections() {
        if (this.expressRouteCrossConnections == null) {
            this.expressRouteCrossConnections =
                new ExpressRouteCrossConnectionsImpl(clientObject.getExpressRouteCrossConnections(), this);
        }
        return expressRouteCrossConnections;
    }

    /**
     * Gets the resource collection API of ExpressRouteCrossConnectionPeerings.
     *
     * @return Resource collection API of ExpressRouteCrossConnectionPeerings.
     */
    public ExpressRouteCrossConnectionPeerings expressRouteCrossConnectionPeerings() {
        if (this.expressRouteCrossConnectionPeerings == null) {
            this.expressRouteCrossConnectionPeerings =
                new ExpressRouteCrossConnectionPeeringsImpl(
                    clientObject.getExpressRouteCrossConnectionPeerings(), this);
        }
        return expressRouteCrossConnectionPeerings;
    }

    /**
     * Gets the resource collection API of ExpressRoutePortsLocations.
     *
     * @return Resource collection API of ExpressRoutePortsLocations.
     */
    public ExpressRoutePortsLocations expressRoutePortsLocations() {
        if (this.expressRoutePortsLocations == null) {
            this.expressRoutePortsLocations =
                new ExpressRoutePortsLocationsImpl(clientObject.getExpressRoutePortsLocations(), this);
        }
        return expressRoutePortsLocations;
    }

    /**
     * Gets the resource collection API of ExpressRoutePorts. It manages ExpressRoutePort.
     *
     * @return Resource collection API of ExpressRoutePorts.
     */
    public ExpressRoutePorts expressRoutePorts() {
        if (this.expressRoutePorts == null) {
            this.expressRoutePorts = new ExpressRoutePortsImpl(clientObject.getExpressRoutePorts(), this);
        }
        return expressRoutePorts;
    }

    /**
     * Gets the resource collection API of ExpressRouteLinks.
     *
     * @return Resource collection API of ExpressRouteLinks.
     */
    public ExpressRouteLinks expressRouteLinks() {
        if (this.expressRouteLinks == null) {
            this.expressRouteLinks = new ExpressRouteLinksImpl(clientObject.getExpressRouteLinks(), this);
        }
        return expressRouteLinks;
    }

    /**
     * Gets the resource collection API of ExpressRoutePortAuthorizations. It manages ExpressRoutePortAuthorization.
     *
     * @return Resource collection API of ExpressRoutePortAuthorizations.
     */
    public ExpressRoutePortAuthorizations expressRoutePortAuthorizations() {
        if (this.expressRoutePortAuthorizations == null) {
            this.expressRoutePortAuthorizations =
                new ExpressRoutePortAuthorizationsImpl(clientObject.getExpressRoutePortAuthorizations(), this);
        }
        return expressRoutePortAuthorizations;
    }

    /**
     * Gets the resource collection API of FirewallPolicies. It manages FirewallPolicy.
     *
     * @return Resource collection API of FirewallPolicies.
     */
    public FirewallPolicies firewallPolicies() {
        if (this.firewallPolicies == null) {
            this.firewallPolicies = new FirewallPoliciesImpl(clientObject.getFirewallPolicies(), this);
        }
        return firewallPolicies;
    }

    /**
     * Gets the resource collection API of FirewallPolicyRuleCollectionGroups. It manages
     * FirewallPolicyRuleCollectionGroup.
     *
     * @return Resource collection API of FirewallPolicyRuleCollectionGroups.
     */
    public FirewallPolicyRuleCollectionGroups firewallPolicyRuleCollectionGroups() {
        if (this.firewallPolicyRuleCollectionGroups == null) {
            this.firewallPolicyRuleCollectionGroups =
                new FirewallPolicyRuleCollectionGroupsImpl(clientObject.getFirewallPolicyRuleCollectionGroups(), this);
        }
        return firewallPolicyRuleCollectionGroups;
    }

    /**
     * Gets the resource collection API of FirewallPolicyIdpsSignatures.
     *
     * @return Resource collection API of FirewallPolicyIdpsSignatures.
     */
    public FirewallPolicyIdpsSignatures firewallPolicyIdpsSignatures() {
        if (this.firewallPolicyIdpsSignatures == null) {
            this.firewallPolicyIdpsSignatures =
                new FirewallPolicyIdpsSignaturesImpl(clientObject.getFirewallPolicyIdpsSignatures(), this);
        }
        return firewallPolicyIdpsSignatures;
    }

    /**
     * Gets the resource collection API of FirewallPolicyIdpsSignaturesOverrides.
     *
     * @return Resource collection API of FirewallPolicyIdpsSignaturesOverrides.
     */
    public FirewallPolicyIdpsSignaturesOverrides firewallPolicyIdpsSignaturesOverrides() {
        if (this.firewallPolicyIdpsSignaturesOverrides == null) {
            this.firewallPolicyIdpsSignaturesOverrides =
                new FirewallPolicyIdpsSignaturesOverridesImpl(
                    clientObject.getFirewallPolicyIdpsSignaturesOverrides(), this);
        }
        return firewallPolicyIdpsSignaturesOverrides;
    }

    /**
     * Gets the resource collection API of FirewallPolicyIdpsSignaturesFilterValues.
     *
     * @return Resource collection API of FirewallPolicyIdpsSignaturesFilterValues.
     */
    public FirewallPolicyIdpsSignaturesFilterValues firewallPolicyIdpsSignaturesFilterValues() {
        if (this.firewallPolicyIdpsSignaturesFilterValues == null) {
            this.firewallPolicyIdpsSignaturesFilterValues =
                new FirewallPolicyIdpsSignaturesFilterValuesImpl(
                    clientObject.getFirewallPolicyIdpsSignaturesFilterValues(), this);
        }
        return firewallPolicyIdpsSignaturesFilterValues;
    }

    /**
     * Gets the resource collection API of IpAllocations. It manages IpAllocation.
     *
     * @return Resource collection API of IpAllocations.
     */
    public IpAllocations ipAllocations() {
        if (this.ipAllocations == null) {
            this.ipAllocations = new IpAllocationsImpl(clientObject.getIpAllocations(), this);
        }
        return ipAllocations;
    }

    /**
     * Gets the resource collection API of IpGroups. It manages IpGroup.
     *
     * @return Resource collection API of IpGroups.
     */
    public IpGroups ipGroups() {
        if (this.ipGroups == null) {
            this.ipGroups = new IpGroupsImpl(clientObject.getIpGroups(), this);
        }
        return ipGroups;
    }

    /**
     * Gets the resource collection API of LoadBalancers. It manages LoadBalancer.
     *
     * @return Resource collection API of LoadBalancers.
     */
    public LoadBalancers loadBalancers() {
        if (this.loadBalancers == null) {
            this.loadBalancers = new LoadBalancersImpl(clientObject.getLoadBalancers(), this);
        }
        return loadBalancers;
    }

    /**
     * Gets the resource collection API of LoadBalancerBackendAddressPools. It manages BackendAddressPool.
     *
     * @return Resource collection API of LoadBalancerBackendAddressPools.
     */
    public LoadBalancerBackendAddressPools loadBalancerBackendAddressPools() {
        if (this.loadBalancerBackendAddressPools == null) {
            this.loadBalancerBackendAddressPools =
                new LoadBalancerBackendAddressPoolsImpl(clientObject.getLoadBalancerBackendAddressPools(), this);
        }
        return loadBalancerBackendAddressPools;
    }

    /**
     * Gets the resource collection API of LoadBalancerFrontendIpConfigurations.
     *
     * @return Resource collection API of LoadBalancerFrontendIpConfigurations.
     */
    public LoadBalancerFrontendIpConfigurations loadBalancerFrontendIpConfigurations() {
        if (this.loadBalancerFrontendIpConfigurations == null) {
            this.loadBalancerFrontendIpConfigurations =
                new LoadBalancerFrontendIpConfigurationsImpl(
                    clientObject.getLoadBalancerFrontendIpConfigurations(), this);
        }
        return loadBalancerFrontendIpConfigurations;
    }

    /**
     * Gets the resource collection API of InboundNatRules. It manages InboundNatRule.
     *
     * @return Resource collection API of InboundNatRules.
     */
    public InboundNatRules inboundNatRules() {
        if (this.inboundNatRules == null) {
            this.inboundNatRules = new InboundNatRulesImpl(clientObject.getInboundNatRules(), this);
        }
        return inboundNatRules;
    }

    /**
     * Gets the resource collection API of LoadBalancerLoadBalancingRules.
     *
     * @return Resource collection API of LoadBalancerLoadBalancingRules.
     */
    public LoadBalancerLoadBalancingRules loadBalancerLoadBalancingRules() {
        if (this.loadBalancerLoadBalancingRules == null) {
            this.loadBalancerLoadBalancingRules =
                new LoadBalancerLoadBalancingRulesImpl(clientObject.getLoadBalancerLoadBalancingRules(), this);
        }
        return loadBalancerLoadBalancingRules;
    }

    /**
     * Gets the resource collection API of LoadBalancerOutboundRules.
     *
     * @return Resource collection API of LoadBalancerOutboundRules.
     */
    public LoadBalancerOutboundRules loadBalancerOutboundRules() {
        if (this.loadBalancerOutboundRules == null) {
            this.loadBalancerOutboundRules =
                new LoadBalancerOutboundRulesImpl(clientObject.getLoadBalancerOutboundRules(), this);
        }
        return loadBalancerOutboundRules;
    }

    /**
     * Gets the resource collection API of LoadBalancerNetworkInterfaces.
     *
     * @return Resource collection API of LoadBalancerNetworkInterfaces.
     */
    public LoadBalancerNetworkInterfaces loadBalancerNetworkInterfaces() {
        if (this.loadBalancerNetworkInterfaces == null) {
            this.loadBalancerNetworkInterfaces =
                new LoadBalancerNetworkInterfacesImpl(clientObject.getLoadBalancerNetworkInterfaces(), this);
        }
        return loadBalancerNetworkInterfaces;
    }

    /**
     * Gets the resource collection API of LoadBalancerProbes.
     *
     * @return Resource collection API of LoadBalancerProbes.
     */
    public LoadBalancerProbes loadBalancerProbes() {
        if (this.loadBalancerProbes == null) {
            this.loadBalancerProbes = new LoadBalancerProbesImpl(clientObject.getLoadBalancerProbes(), this);
        }
        return loadBalancerProbes;
    }

    /**
     * Gets the resource collection API of NatGateways. It manages NatGateway.
     *
     * @return Resource collection API of NatGateways.
     */
    public NatGateways natGateways() {
        if (this.natGateways == null) {
            this.natGateways = new NatGatewaysImpl(clientObject.getNatGateways(), this);
        }
        return natGateways;
    }

    /**
     * Gets the resource collection API of NetworkInterfaceIpConfigurations.
     *
     * @return Resource collection API of NetworkInterfaceIpConfigurations.
     */
    public NetworkInterfaceIpConfigurations networkInterfaceIpConfigurations() {
        if (this.networkInterfaceIpConfigurations == null) {
            this.networkInterfaceIpConfigurations =
                new NetworkInterfaceIpConfigurationsImpl(clientObject.getNetworkInterfaceIpConfigurations(), this);
        }
        return networkInterfaceIpConfigurations;
    }

    /**
     * Gets the resource collection API of NetworkInterfaceLoadBalancers.
     *
     * @return Resource collection API of NetworkInterfaceLoadBalancers.
     */
    public NetworkInterfaceLoadBalancers networkInterfaceLoadBalancers() {
        if (this.networkInterfaceLoadBalancers == null) {
            this.networkInterfaceLoadBalancers =
                new NetworkInterfaceLoadBalancersImpl(clientObject.getNetworkInterfaceLoadBalancers(), this);
        }
        return networkInterfaceLoadBalancers;
    }

    /**
     * Gets the resource collection API of NetworkInterfaceTapConfigurations. It manages
     * NetworkInterfaceTapConfiguration.
     *
     * @return Resource collection API of NetworkInterfaceTapConfigurations.
     */
    public NetworkInterfaceTapConfigurations networkInterfaceTapConfigurations() {
        if (this.networkInterfaceTapConfigurations == null) {
            this.networkInterfaceTapConfigurations =
                new NetworkInterfaceTapConfigurationsImpl(clientObject.getNetworkInterfaceTapConfigurations(), this);
        }
        return networkInterfaceTapConfigurations;
    }

    /**
     * Gets the resource collection API of NetworkManagers. It manages NetworkManager.
     *
     * @return Resource collection API of NetworkManagers.
     */
    public NetworkManagers networkManagers() {
        if (this.networkManagers == null) {
            this.networkManagers = new NetworkManagersImpl(clientObject.getNetworkManagers(), this);
        }
        return networkManagers;
    }

    /**
     * Gets the resource collection API of NetworkManagerCommits.
     *
     * @return Resource collection API of NetworkManagerCommits.
     */
    public NetworkManagerCommits networkManagerCommits() {
        if (this.networkManagerCommits == null) {
            this.networkManagerCommits = new NetworkManagerCommitsImpl(clientObject.getNetworkManagerCommits(), this);
        }
        return networkManagerCommits;
    }

    /**
     * Gets the resource collection API of NetworkManagerDeploymentStatusOperations.
     *
     * @return Resource collection API of NetworkManagerDeploymentStatusOperations.
     */
    public NetworkManagerDeploymentStatusOperations networkManagerDeploymentStatusOperations() {
        if (this.networkManagerDeploymentStatusOperations == null) {
            this.networkManagerDeploymentStatusOperations =
                new NetworkManagerDeploymentStatusOperationsImpl(
                    clientObject.getNetworkManagerDeploymentStatusOperations(), this);
        }
        return networkManagerDeploymentStatusOperations;
    }

    /**
     * Gets the resource collection API of SubscriptionNetworkManagerConnections. It manages NetworkManagerConnection.
     *
     * @return Resource collection API of SubscriptionNetworkManagerConnections.
     */
    public SubscriptionNetworkManagerConnections subscriptionNetworkManagerConnections() {
        if (this.subscriptionNetworkManagerConnections == null) {
            this.subscriptionNetworkManagerConnections =
                new SubscriptionNetworkManagerConnectionsImpl(
                    clientObject.getSubscriptionNetworkManagerConnections(), this);
        }
        return subscriptionNetworkManagerConnections;
    }

    /**
     * Gets the resource collection API of ManagementGroupNetworkManagerConnections.
     *
     * @return Resource collection API of ManagementGroupNetworkManagerConnections.
     */
    public ManagementGroupNetworkManagerConnections managementGroupNetworkManagerConnections() {
        if (this.managementGroupNetworkManagerConnections == null) {
            this.managementGroupNetworkManagerConnections =
                new ManagementGroupNetworkManagerConnectionsImpl(
                    clientObject.getManagementGroupNetworkManagerConnections(), this);
        }
        return managementGroupNetworkManagerConnections;
    }

    /**
     * Gets the resource collection API of ConnectivityConfigurations. It manages ConnectivityConfiguration.
     *
     * @return Resource collection API of ConnectivityConfigurations.
     */
    public ConnectivityConfigurations connectivityConfigurations() {
        if (this.connectivityConfigurations == null) {
            this.connectivityConfigurations =
                new ConnectivityConfigurationsImpl(clientObject.getConnectivityConfigurations(), this);
        }
        return connectivityConfigurations;
    }

    /**
     * Gets the resource collection API of NetworkGroups. It manages NetworkGroup.
     *
     * @return Resource collection API of NetworkGroups.
     */
    public NetworkGroups networkGroups() {
        if (this.networkGroups == null) {
            this.networkGroups = new NetworkGroupsImpl(clientObject.getNetworkGroups(), this);
        }
        return networkGroups;
    }

    /**
     * Gets the resource collection API of StaticMembers. It manages StaticMember.
     *
     * @return Resource collection API of StaticMembers.
     */
    public StaticMembers staticMembers() {
        if (this.staticMembers == null) {
            this.staticMembers = new StaticMembersImpl(clientObject.getStaticMembers(), this);
        }
        return staticMembers;
    }

    /**
     * Gets the resource collection API of ScopeConnections. It manages ScopeConnection.
     *
     * @return Resource collection API of ScopeConnections.
     */
    public ScopeConnections scopeConnections() {
        if (this.scopeConnections == null) {
            this.scopeConnections = new ScopeConnectionsImpl(clientObject.getScopeConnections(), this);
        }
        return scopeConnections;
    }

    /**
     * Gets the resource collection API of SecurityAdminConfigurations. It manages SecurityAdminConfiguration.
     *
     * @return Resource collection API of SecurityAdminConfigurations.
     */
    public SecurityAdminConfigurations securityAdminConfigurations() {
        if (this.securityAdminConfigurations == null) {
            this.securityAdminConfigurations =
                new SecurityAdminConfigurationsImpl(clientObject.getSecurityAdminConfigurations(), this);
        }
        return securityAdminConfigurations;
    }

    /**
     * Gets the resource collection API of AdminRuleCollections. It manages AdminRuleCollection.
     *
     * @return Resource collection API of AdminRuleCollections.
     */
    public AdminRuleCollections adminRuleCollections() {
        if (this.adminRuleCollections == null) {
            this.adminRuleCollections = new AdminRuleCollectionsImpl(clientObject.getAdminRuleCollections(), this);
        }
        return adminRuleCollections;
    }

    /**
     * Gets the resource collection API of AdminRules.
     *
     * @return Resource collection API of AdminRules.
     */
    public AdminRules adminRules() {
        if (this.adminRules == null) {
            this.adminRules = new AdminRulesImpl(clientObject.getAdminRules(), this);
        }
        return adminRules;
    }

    /**
     * Gets the resource collection API of NetworkProfiles. It manages NetworkProfile.
     *
     * @return Resource collection API of NetworkProfiles.
     */
    public NetworkProfiles networkProfiles() {
        if (this.networkProfiles == null) {
            this.networkProfiles = new NetworkProfilesImpl(clientObject.getNetworkProfiles(), this);
        }
        return networkProfiles;
    }

    /**
     * Gets the resource collection API of NetworkSecurityGroups. It manages NetworkSecurityGroup.
     *
     * @return Resource collection API of NetworkSecurityGroups.
     */
    public NetworkSecurityGroups networkSecurityGroups() {
        if (this.networkSecurityGroups == null) {
            this.networkSecurityGroups = new NetworkSecurityGroupsImpl(clientObject.getNetworkSecurityGroups(), this);
        }
        return networkSecurityGroups;
    }

    /**
     * Gets the resource collection API of SecurityRules. It manages SecurityRule.
     *
     * @return Resource collection API of SecurityRules.
     */
    public SecurityRules securityRules() {
        if (this.securityRules == null) {
            this.securityRules = new SecurityRulesImpl(clientObject.getSecurityRules(), this);
        }
        return securityRules;
    }

    /**
     * Gets the resource collection API of DefaultSecurityRules.
     *
     * @return Resource collection API of DefaultSecurityRules.
     */
    public DefaultSecurityRules defaultSecurityRules() {
        if (this.defaultSecurityRules == null) {
            this.defaultSecurityRules = new DefaultSecurityRulesImpl(clientObject.getDefaultSecurityRules(), this);
        }
        return defaultSecurityRules;
    }

    /**
     * Gets the resource collection API of NetworkVirtualAppliances. It manages NetworkVirtualAppliance.
     *
     * @return Resource collection API of NetworkVirtualAppliances.
     */
    public NetworkVirtualAppliances networkVirtualAppliances() {
        if (this.networkVirtualAppliances == null) {
            this.networkVirtualAppliances =
                new NetworkVirtualAppliancesImpl(clientObject.getNetworkVirtualAppliances(), this);
        }
        return networkVirtualAppliances;
    }

    /**
     * Gets the resource collection API of VirtualApplianceSites. It manages VirtualApplianceSite.
     *
     * @return Resource collection API of VirtualApplianceSites.
     */
    public VirtualApplianceSites virtualApplianceSites() {
        if (this.virtualApplianceSites == null) {
            this.virtualApplianceSites = new VirtualApplianceSitesImpl(clientObject.getVirtualApplianceSites(), this);
        }
        return virtualApplianceSites;
    }

    /**
     * Gets the resource collection API of VirtualApplianceSkus.
     *
     * @return Resource collection API of VirtualApplianceSkus.
     */
    public VirtualApplianceSkus virtualApplianceSkus() {
        if (this.virtualApplianceSkus == null) {
            this.virtualApplianceSkus = new VirtualApplianceSkusImpl(clientObject.getVirtualApplianceSkus(), this);
        }
        return virtualApplianceSkus;
    }

    /**
     * Gets the resource collection API of InboundSecurityRuleOperations. It manages InboundSecurityRule.
     *
     * @return Resource collection API of InboundSecurityRuleOperations.
     */
    public InboundSecurityRuleOperations inboundSecurityRuleOperations() {
        if (this.inboundSecurityRuleOperations == null) {
            this.inboundSecurityRuleOperations =
                new InboundSecurityRuleOperationsImpl(clientObject.getInboundSecurityRuleOperations(), this);
        }
        return inboundSecurityRuleOperations;
    }

    /**
     * Gets the resource collection API of NetworkWatchers. It manages NetworkWatcher.
     *
     * @return Resource collection API of NetworkWatchers.
     */
    public NetworkWatchers networkWatchers() {
        if (this.networkWatchers == null) {
            this.networkWatchers = new NetworkWatchersImpl(clientObject.getNetworkWatchers(), this);
        }
        return networkWatchers;
    }

    /**
     * Gets the resource collection API of PacketCaptures.
     *
     * @return Resource collection API of PacketCaptures.
     */
    public PacketCaptures packetCaptures() {
        if (this.packetCaptures == null) {
            this.packetCaptures = new PacketCapturesImpl(clientObject.getPacketCaptures(), this);
        }
        return packetCaptures;
    }

    /**
     * Gets the resource collection API of ConnectionMonitors. It manages ConnectionMonitorResult.
     *
     * @return Resource collection API of ConnectionMonitors.
     */
    public ConnectionMonitors connectionMonitors() {
        if (this.connectionMonitors == null) {
            this.connectionMonitors = new ConnectionMonitorsImpl(clientObject.getConnectionMonitors(), this);
        }
        return connectionMonitors;
    }

    /**
     * Gets the resource collection API of FlowLogs. It manages FlowLog.
     *
     * @return Resource collection API of FlowLogs.
     */
    public FlowLogs flowLogs() {
        if (this.flowLogs == null) {
            this.flowLogs = new FlowLogsImpl(clientObject.getFlowLogs(), this);
        }
        return flowLogs;
    }

    /**
     * Gets the resource collection API of Operations.
     *
     * @return Resource collection API of Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(clientObject.getOperations(), this);
        }
        return operations;
    }

    /**
     * Gets the resource collection API of PrivateEndpoints. It manages PrivateEndpoint.
     *
     * @return Resource collection API of PrivateEndpoints.
     */
    public PrivateEndpoints privateEndpoints() {
        if (this.privateEndpoints == null) {
            this.privateEndpoints = new PrivateEndpointsImpl(clientObject.getPrivateEndpoints(), this);
        }
        return privateEndpoints;
    }

    /**
     * Gets the resource collection API of AvailablePrivateEndpointTypes.
     *
     * @return Resource collection API of AvailablePrivateEndpointTypes.
     */
    public AvailablePrivateEndpointTypes availablePrivateEndpointTypes() {
        if (this.availablePrivateEndpointTypes == null) {
            this.availablePrivateEndpointTypes =
                new AvailablePrivateEndpointTypesImpl(clientObject.getAvailablePrivateEndpointTypes(), this);
        }
        return availablePrivateEndpointTypes;
    }

    /**
     * Gets the resource collection API of PrivateDnsZoneGroups.
     *
     * @return Resource collection API of PrivateDnsZoneGroups.
     */
    public PrivateDnsZoneGroups privateDnsZoneGroups() {
        if (this.privateDnsZoneGroups == null) {
            this.privateDnsZoneGroups = new PrivateDnsZoneGroupsImpl(clientObject.getPrivateDnsZoneGroups(), this);
        }
        return privateDnsZoneGroups;
    }

    /**
     * Gets the resource collection API of PrivateLinkServices. It manages PrivateLinkService.
     *
     * @return Resource collection API of PrivateLinkServices.
     */
    public PrivateLinkServices privateLinkServices() {
        if (this.privateLinkServices == null) {
            this.privateLinkServices = new PrivateLinkServicesImpl(clientObject.getPrivateLinkServices(), this);
        }
        return privateLinkServices;
    }

    /**
     * Gets the resource collection API of PublicIpPrefixes. It manages PublicIpPrefix.
     *
     * @return Resource collection API of PublicIpPrefixes.
     */
    public PublicIpPrefixes publicIpPrefixes() {
        if (this.publicIpPrefixes == null) {
            this.publicIpPrefixes = new PublicIpPrefixesImpl(clientObject.getPublicIpPrefixes(), this);
        }
        return publicIpPrefixes;
    }

    /**
     * Gets the resource collection API of RouteFilters. It manages RouteFilter.
     *
     * @return Resource collection API of RouteFilters.
     */
    public RouteFilters routeFilters() {
        if (this.routeFilters == null) {
            this.routeFilters = new RouteFiltersImpl(clientObject.getRouteFilters(), this);
        }
        return routeFilters;
    }

    /**
     * Gets the resource collection API of RouteFilterRules.
     *
     * @return Resource collection API of RouteFilterRules.
     */
    public RouteFilterRules routeFilterRules() {
        if (this.routeFilterRules == null) {
            this.routeFilterRules = new RouteFilterRulesImpl(clientObject.getRouteFilterRules(), this);
        }
        return routeFilterRules;
    }

    /**
     * Gets the resource collection API of RouteTables. It manages RouteTable.
     *
     * @return Resource collection API of RouteTables.
     */
    public RouteTables routeTables() {
        if (this.routeTables == null) {
            this.routeTables = new RouteTablesImpl(clientObject.getRouteTables(), this);
        }
        return routeTables;
    }

    /**
     * Gets the resource collection API of Routes. It manages Route.
     *
     * @return Resource collection API of Routes.
     */
    public Routes routes() {
        if (this.routes == null) {
            this.routes = new RoutesImpl(clientObject.getRoutes(), this);
        }
        return routes;
    }

    /**
     * Gets the resource collection API of SecurityPartnerProviders. It manages SecurityPartnerProvider.
     *
     * @return Resource collection API of SecurityPartnerProviders.
     */
    public SecurityPartnerProviders securityPartnerProviders() {
        if (this.securityPartnerProviders == null) {
            this.securityPartnerProviders =
                new SecurityPartnerProvidersImpl(clientObject.getSecurityPartnerProviders(), this);
        }
        return securityPartnerProviders;
    }

    /**
     * Gets the resource collection API of BgpServiceCommunities.
     *
     * @return Resource collection API of BgpServiceCommunities.
     */
    public BgpServiceCommunities bgpServiceCommunities() {
        if (this.bgpServiceCommunities == null) {
            this.bgpServiceCommunities = new BgpServiceCommunitiesImpl(clientObject.getBgpServiceCommunities(), this);
        }
        return bgpServiceCommunities;
    }

    /**
     * Gets the resource collection API of ServiceEndpointPolicies. It manages ServiceEndpointPolicy.
     *
     * @return Resource collection API of ServiceEndpointPolicies.
     */
    public ServiceEndpointPolicies serviceEndpointPolicies() {
        if (this.serviceEndpointPolicies == null) {
            this.serviceEndpointPolicies =
                new ServiceEndpointPoliciesImpl(clientObject.getServiceEndpointPolicies(), this);
        }
        return serviceEndpointPolicies;
    }

    /**
     * Gets the resource collection API of ServiceEndpointPolicyDefinitions. It manages ServiceEndpointPolicyDefinition.
     *
     * @return Resource collection API of ServiceEndpointPolicyDefinitions.
     */
    public ServiceEndpointPolicyDefinitions serviceEndpointPolicyDefinitions() {
        if (this.serviceEndpointPolicyDefinitions == null) {
            this.serviceEndpointPolicyDefinitions =
                new ServiceEndpointPolicyDefinitionsImpl(clientObject.getServiceEndpointPolicyDefinitions(), this);
        }
        return serviceEndpointPolicyDefinitions;
    }

    /**
     * Gets the resource collection API of ServiceTags.
     *
     * @return Resource collection API of ServiceTags.
     */
    public ServiceTags serviceTags() {
        if (this.serviceTags == null) {
            this.serviceTags = new ServiceTagsImpl(clientObject.getServiceTags(), this);
        }
        return serviceTags;
    }

    /**
     * Gets the resource collection API of ServiceTagInformations.
     *
     * @return Resource collection API of ServiceTagInformations.
     */
    public ServiceTagInformations serviceTagInformations() {
        if (this.serviceTagInformations == null) {
            this.serviceTagInformations =
                new ServiceTagInformationsImpl(clientObject.getServiceTagInformations(), this);
        }
        return serviceTagInformations;
    }

    /**
     * Gets the resource collection API of Usages.
     *
     * @return Resource collection API of Usages.
     */
    public Usages usages() {
        if (this.usages == null) {
            this.usages = new UsagesImpl(clientObject.getUsages(), this);
        }
        return usages;
    }

    /**
     * Gets the resource collection API of VirtualNetworks. It manages VirtualNetwork.
     *
     * @return Resource collection API of VirtualNetworks.
     */
    public VirtualNetworks virtualNetworks() {
        if (this.virtualNetworks == null) {
            this.virtualNetworks = new VirtualNetworksImpl(clientObject.getVirtualNetworks(), this);
        }
        return virtualNetworks;
    }

    /**
     * Gets the resource collection API of Subnets. It manages Subnet.
     *
     * @return Resource collection API of Subnets.
     */
    public Subnets subnets() {
        if (this.subnets == null) {
            this.subnets = new SubnetsImpl(clientObject.getSubnets(), this);
        }
        return subnets;
    }

    /**
     * Gets the resource collection API of ResourceNavigationLinks.
     *
     * @return Resource collection API of ResourceNavigationLinks.
     */
    public ResourceNavigationLinks resourceNavigationLinks() {
        if (this.resourceNavigationLinks == null) {
            this.resourceNavigationLinks =
                new ResourceNavigationLinksImpl(clientObject.getResourceNavigationLinks(), this);
        }
        return resourceNavigationLinks;
    }

    /**
     * Gets the resource collection API of ServiceAssociationLinks.
     *
     * @return Resource collection API of ServiceAssociationLinks.
     */
    public ServiceAssociationLinks serviceAssociationLinks() {
        if (this.serviceAssociationLinks == null) {
            this.serviceAssociationLinks =
                new ServiceAssociationLinksImpl(clientObject.getServiceAssociationLinks(), this);
        }
        return serviceAssociationLinks;
    }

    /**
     * Gets the resource collection API of VirtualNetworkPeerings. It manages VirtualNetworkPeering.
     *
     * @return Resource collection API of VirtualNetworkPeerings.
     */
    public VirtualNetworkPeerings virtualNetworkPeerings() {
        if (this.virtualNetworkPeerings == null) {
            this.virtualNetworkPeerings =
                new VirtualNetworkPeeringsImpl(clientObject.getVirtualNetworkPeerings(), this);
        }
        return virtualNetworkPeerings;
    }

    /**
     * Gets the resource collection API of VirtualNetworkGateways. It manages VirtualNetworkGateway.
     *
     * @return Resource collection API of VirtualNetworkGateways.
     */
    public VirtualNetworkGateways virtualNetworkGateways() {
        if (this.virtualNetworkGateways == null) {
            this.virtualNetworkGateways =
                new VirtualNetworkGatewaysImpl(clientObject.getVirtualNetworkGateways(), this);
        }
        return virtualNetworkGateways;
    }

    /**
     * Gets the resource collection API of VirtualNetworkGatewayConnections. It manages VirtualNetworkGatewayConnection.
     *
     * @return Resource collection API of VirtualNetworkGatewayConnections.
     */
    public VirtualNetworkGatewayConnections virtualNetworkGatewayConnections() {
        if (this.virtualNetworkGatewayConnections == null) {
            this.virtualNetworkGatewayConnections =
                new VirtualNetworkGatewayConnectionsImpl(clientObject.getVirtualNetworkGatewayConnections(), this);
        }
        return virtualNetworkGatewayConnections;
    }

    /**
     * Gets the resource collection API of LocalNetworkGateways. It manages LocalNetworkGateway.
     *
     * @return Resource collection API of LocalNetworkGateways.
     */
    public LocalNetworkGateways localNetworkGateways() {
        if (this.localNetworkGateways == null) {
            this.localNetworkGateways = new LocalNetworkGatewaysImpl(clientObject.getLocalNetworkGateways(), this);
        }
        return localNetworkGateways;
    }

    /**
     * Gets the resource collection API of VirtualNetworkGatewayNatRules. It manages VirtualNetworkGatewayNatRule.
     *
     * @return Resource collection API of VirtualNetworkGatewayNatRules.
     */
    public VirtualNetworkGatewayNatRules virtualNetworkGatewayNatRules() {
        if (this.virtualNetworkGatewayNatRules == null) {
            this.virtualNetworkGatewayNatRules =
                new VirtualNetworkGatewayNatRulesImpl(clientObject.getVirtualNetworkGatewayNatRules(), this);
        }
        return virtualNetworkGatewayNatRules;
    }

    /**
     * Gets the resource collection API of VirtualNetworkTaps. It manages VirtualNetworkTap.
     *
     * @return Resource collection API of VirtualNetworkTaps.
     */
    public VirtualNetworkTaps virtualNetworkTaps() {
        if (this.virtualNetworkTaps == null) {
            this.virtualNetworkTaps = new VirtualNetworkTapsImpl(clientObject.getVirtualNetworkTaps(), this);
        }
        return virtualNetworkTaps;
    }

    /**
     * Gets the resource collection API of VirtualRouters. It manages VirtualRouter.
     *
     * @return Resource collection API of VirtualRouters.
     */
    public VirtualRouters virtualRouters() {
        if (this.virtualRouters == null) {
            this.virtualRouters = new VirtualRoutersImpl(clientObject.getVirtualRouters(), this);
        }
        return virtualRouters;
    }

    /**
     * Gets the resource collection API of VirtualRouterPeerings. It manages VirtualRouterPeering.
     *
     * @return Resource collection API of VirtualRouterPeerings.
     */
    public VirtualRouterPeerings virtualRouterPeerings() {
        if (this.virtualRouterPeerings == null) {
            this.virtualRouterPeerings = new VirtualRouterPeeringsImpl(clientObject.getVirtualRouterPeerings(), this);
        }
        return virtualRouterPeerings;
    }

    /**
     * Gets the resource collection API of VirtualWans. It manages VirtualWan.
     *
     * @return Resource collection API of VirtualWans.
     */
    public VirtualWans virtualWans() {
        if (this.virtualWans == null) {
            this.virtualWans = new VirtualWansImpl(clientObject.getVirtualWans(), this);
        }
        return virtualWans;
    }

    /**
     * Gets the resource collection API of VpnSites. It manages VpnSite.
     *
     * @return Resource collection API of VpnSites.
     */
    public VpnSites vpnSites() {
        if (this.vpnSites == null) {
            this.vpnSites = new VpnSitesImpl(clientObject.getVpnSites(), this);
        }
        return vpnSites;
    }

    /**
     * Gets the resource collection API of VpnSiteLinks.
     *
     * @return Resource collection API of VpnSiteLinks.
     */
    public VpnSiteLinks vpnSiteLinks() {
        if (this.vpnSiteLinks == null) {
            this.vpnSiteLinks = new VpnSiteLinksImpl(clientObject.getVpnSiteLinks(), this);
        }
        return vpnSiteLinks;
    }

    /**
     * Gets the resource collection API of VpnSitesConfigurations.
     *
     * @return Resource collection API of VpnSitesConfigurations.
     */
    public VpnSitesConfigurations vpnSitesConfigurations() {
        if (this.vpnSitesConfigurations == null) {
            this.vpnSitesConfigurations =
                new VpnSitesConfigurationsImpl(clientObject.getVpnSitesConfigurations(), this);
        }
        return vpnSitesConfigurations;
    }

    /**
     * Gets the resource collection API of VpnServerConfigurations. It manages VpnServerConfiguration.
     *
     * @return Resource collection API of VpnServerConfigurations.
     */
    public VpnServerConfigurations vpnServerConfigurations() {
        if (this.vpnServerConfigurations == null) {
            this.vpnServerConfigurations =
                new VpnServerConfigurationsImpl(clientObject.getVpnServerConfigurations(), this);
        }
        return vpnServerConfigurations;
    }

    /**
     * Gets the resource collection API of ConfigurationPolicyGroups. It manages VpnServerConfigurationPolicyGroup.
     *
     * @return Resource collection API of ConfigurationPolicyGroups.
     */
    public ConfigurationPolicyGroups configurationPolicyGroups() {
        if (this.configurationPolicyGroups == null) {
            this.configurationPolicyGroups =
                new ConfigurationPolicyGroupsImpl(clientObject.getConfigurationPolicyGroups(), this);
        }
        return configurationPolicyGroups;
    }

    /**
     * Gets the resource collection API of VirtualHubs. It manages VirtualHub.
     *
     * @return Resource collection API of VirtualHubs.
     */
    public VirtualHubs virtualHubs() {
        if (this.virtualHubs == null) {
            this.virtualHubs = new VirtualHubsImpl(clientObject.getVirtualHubs(), this);
        }
        return virtualHubs;
    }

    /**
     * Gets the resource collection API of HubVirtualNetworkConnections.
     *
     * @return Resource collection API of HubVirtualNetworkConnections.
     */
    public HubVirtualNetworkConnections hubVirtualNetworkConnections() {
        if (this.hubVirtualNetworkConnections == null) {
            this.hubVirtualNetworkConnections =
                new HubVirtualNetworkConnectionsImpl(clientObject.getHubVirtualNetworkConnections(), this);
        }
        return hubVirtualNetworkConnections;
    }

    /**
     * Gets the resource collection API of VpnGateways. It manages VpnGateway.
     *
     * @return Resource collection API of VpnGateways.
     */
    public VpnGateways vpnGateways() {
        if (this.vpnGateways == null) {
            this.vpnGateways = new VpnGatewaysImpl(clientObject.getVpnGateways(), this);
        }
        return vpnGateways;
    }

    /**
     * Gets the resource collection API of VpnLinkConnections.
     *
     * @return Resource collection API of VpnLinkConnections.
     */
    public VpnLinkConnections vpnLinkConnections() {
        if (this.vpnLinkConnections == null) {
            this.vpnLinkConnections = new VpnLinkConnectionsImpl(clientObject.getVpnLinkConnections(), this);
        }
        return vpnLinkConnections;
    }

    /**
     * Gets the resource collection API of VpnConnections.
     *
     * @return Resource collection API of VpnConnections.
     */
    public VpnConnections vpnConnections() {
        if (this.vpnConnections == null) {
            this.vpnConnections = new VpnConnectionsImpl(clientObject.getVpnConnections(), this);
        }
        return vpnConnections;
    }

    /**
     * Gets the resource collection API of VpnSiteLinkConnections.
     *
     * @return Resource collection API of VpnSiteLinkConnections.
     */
    public VpnSiteLinkConnections vpnSiteLinkConnections() {
        if (this.vpnSiteLinkConnections == null) {
            this.vpnSiteLinkConnections =
                new VpnSiteLinkConnectionsImpl(clientObject.getVpnSiteLinkConnections(), this);
        }
        return vpnSiteLinkConnections;
    }

    /**
     * Gets the resource collection API of NatRules. It manages VpnGatewayNatRule.
     *
     * @return Resource collection API of NatRules.
     */
    public NatRules natRules() {
        if (this.natRules == null) {
            this.natRules = new NatRulesImpl(clientObject.getNatRules(), this);
        }
        return natRules;
    }

    /**
     * Gets the resource collection API of P2SVpnGateways. It manages P2SVpnGateway.
     *
     * @return Resource collection API of P2SVpnGateways.
     */
    public P2SVpnGateways p2SVpnGateways() {
        if (this.p2SVpnGateways == null) {
            this.p2SVpnGateways = new P2SVpnGatewaysImpl(clientObject.getP2SVpnGateways(), this);
        }
        return p2SVpnGateways;
    }

    /**
     * Gets the resource collection API of VpnServerConfigurationsAssociatedWithVirtualWans.
     *
     * @return Resource collection API of VpnServerConfigurationsAssociatedWithVirtualWans.
     */
    public VpnServerConfigurationsAssociatedWithVirtualWans vpnServerConfigurationsAssociatedWithVirtualWans() {
        if (this.vpnServerConfigurationsAssociatedWithVirtualWans == null) {
            this.vpnServerConfigurationsAssociatedWithVirtualWans =
                new VpnServerConfigurationsAssociatedWithVirtualWansImpl(
                    clientObject.getVpnServerConfigurationsAssociatedWithVirtualWans(), this);
        }
        return vpnServerConfigurationsAssociatedWithVirtualWans;
    }

    /**
     * Gets the resource collection API of VirtualHubRouteTableV2S.
     *
     * @return Resource collection API of VirtualHubRouteTableV2S.
     */
    public VirtualHubRouteTableV2S virtualHubRouteTableV2S() {
        if (this.virtualHubRouteTableV2S == null) {
            this.virtualHubRouteTableV2S =
                new VirtualHubRouteTableV2SImpl(clientObject.getVirtualHubRouteTableV2S(), this);
        }
        return virtualHubRouteTableV2S;
    }

    /**
     * Gets the resource collection API of ExpressRouteGateways. It manages ExpressRouteGateway.
     *
     * @return Resource collection API of ExpressRouteGateways.
     */
    public ExpressRouteGateways expressRouteGateways() {
        if (this.expressRouteGateways == null) {
            this.expressRouteGateways = new ExpressRouteGatewaysImpl(clientObject.getExpressRouteGateways(), this);
        }
        return expressRouteGateways;
    }

    /**
     * Gets the resource collection API of ExpressRouteConnections.
     *
     * @return Resource collection API of ExpressRouteConnections.
     */
    public ExpressRouteConnections expressRouteConnections() {
        if (this.expressRouteConnections == null) {
            this.expressRouteConnections =
                new ExpressRouteConnectionsImpl(clientObject.getExpressRouteConnections(), this);
        }
        return expressRouteConnections;
    }

    /**
     * Gets the resource collection API of VirtualHubBgpConnections. It manages BgpConnection.
     *
     * @return Resource collection API of VirtualHubBgpConnections.
     */
    public VirtualHubBgpConnections virtualHubBgpConnections() {
        if (this.virtualHubBgpConnections == null) {
            this.virtualHubBgpConnections =
                new VirtualHubBgpConnectionsImpl(clientObject.getVirtualHubBgpConnections(), this);
        }
        return virtualHubBgpConnections;
    }

    /**
     * Gets the resource collection API of VirtualHubIpConfigurations. It manages HubIpConfiguration.
     *
     * @return Resource collection API of VirtualHubIpConfigurations.
     */
    public VirtualHubIpConfigurations virtualHubIpConfigurations() {
        if (this.virtualHubIpConfigurations == null) {
            this.virtualHubIpConfigurations =
                new VirtualHubIpConfigurationsImpl(clientObject.getVirtualHubIpConfigurations(), this);
        }
        return virtualHubIpConfigurations;
    }

    /**
     * Gets the resource collection API of HubRouteTables. It manages HubRouteTable.
     *
     * @return Resource collection API of HubRouteTables.
     */
    public HubRouteTables hubRouteTables() {
        if (this.hubRouteTables == null) {
            this.hubRouteTables = new HubRouteTablesImpl(clientObject.getHubRouteTables(), this);
        }
        return hubRouteTables;
    }

    /**
     * Gets the resource collection API of RoutingIntents. It manages RoutingIntent.
     *
     * @return Resource collection API of RoutingIntents.
     */
    public RoutingIntents routingIntents() {
        if (this.routingIntents == null) {
            this.routingIntents = new RoutingIntentsImpl(clientObject.getRoutingIntents(), this);
        }
        return routingIntents;
    }

    /**
     * Gets the resource collection API of WebApplicationFirewallPolicies. It manages WebApplicationFirewallPolicy.
     *
     * @return Resource collection API of WebApplicationFirewallPolicies.
     */
    public WebApplicationFirewallPolicies webApplicationFirewallPolicies() {
        if (this.webApplicationFirewallPolicies == null) {
            this.webApplicationFirewallPolicies =
                new WebApplicationFirewallPoliciesImpl(clientObject.getWebApplicationFirewallPolicies(), this);
        }
        return webApplicationFirewallPolicies;
    }

    /**
     * Gets the resource collection API of ExpressRouteProviderPortsLocations.
     *
     * @return Resource collection API of ExpressRouteProviderPortsLocations.
     */
    public ExpressRouteProviderPortsLocations expressRouteProviderPortsLocations() {
        if (this.expressRouteProviderPortsLocations == null) {
            this.expressRouteProviderPortsLocations =
                new ExpressRouteProviderPortsLocationsImpl(clientObject.getExpressRouteProviderPortsLocations(), this);
        }
        return expressRouteProviderPortsLocations;
    }

    /**
     * @return Wrapped service client NetworkManagementClient providing direct access to the underlying auto-generated
     *     API implementation, based on Azure REST API.
     */
    public NetworkManagementClient serviceClient() {
        return this.clientObject;
    }
}
