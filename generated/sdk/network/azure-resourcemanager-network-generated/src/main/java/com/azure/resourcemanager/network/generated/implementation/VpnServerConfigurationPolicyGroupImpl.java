// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.SubResource;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.VpnServerConfigurationPolicyGroupInner;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;
import com.azure.resourcemanager.network.generated.models.VpnServerConfigurationPolicyGroup;
import com.azure.resourcemanager.network.generated.models.VpnServerConfigurationPolicyGroupMember;
import java.util.Collections;
import java.util.List;

public final class VpnServerConfigurationPolicyGroupImpl
    implements VpnServerConfigurationPolicyGroup,
        VpnServerConfigurationPolicyGroup.Definition,
        VpnServerConfigurationPolicyGroup.Update {
    private VpnServerConfigurationPolicyGroupInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Boolean isDefault() {
        return this.innerModel().isDefault();
    }

    public Integer priority() {
        return this.innerModel().priority();
    }

    public List<VpnServerConfigurationPolicyGroupMember> policyMembers() {
        List<VpnServerConfigurationPolicyGroupMember> inner = this.innerModel().policyMembers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<SubResource> p2SConnectionConfigurations() {
        List<SubResource> inner = this.innerModel().p2SConnectionConfigurations();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public VpnServerConfigurationPolicyGroupInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String vpnServerConfigurationName;

    private String configurationPolicyGroupName;

    public VpnServerConfigurationPolicyGroupImpl withExistingVpnServerConfiguration(
        String resourceGroupName, String vpnServerConfigurationName) {
        this.resourceGroupName = resourceGroupName;
        this.vpnServerConfigurationName = vpnServerConfigurationName;
        return this;
    }

    public VpnServerConfigurationPolicyGroup create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConfigurationPolicyGroups()
                .createOrUpdate(
                    resourceGroupName,
                    vpnServerConfigurationName,
                    configurationPolicyGroupName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public VpnServerConfigurationPolicyGroup create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConfigurationPolicyGroups()
                .createOrUpdate(
                    resourceGroupName,
                    vpnServerConfigurationName,
                    configurationPolicyGroupName,
                    this.innerModel(),
                    context);
        return this;
    }

    VpnServerConfigurationPolicyGroupImpl(
        String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new VpnServerConfigurationPolicyGroupInner();
        this.serviceManager = serviceManager;
        this.configurationPolicyGroupName = name;
    }

    public VpnServerConfigurationPolicyGroupImpl update() {
        return this;
    }

    public VpnServerConfigurationPolicyGroup apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConfigurationPolicyGroups()
                .createOrUpdate(
                    resourceGroupName,
                    vpnServerConfigurationName,
                    configurationPolicyGroupName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public VpnServerConfigurationPolicyGroup apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConfigurationPolicyGroups()
                .createOrUpdate(
                    resourceGroupName,
                    vpnServerConfigurationName,
                    configurationPolicyGroupName,
                    this.innerModel(),
                    context);
        return this;
    }

    VpnServerConfigurationPolicyGroupImpl(
        VpnServerConfigurationPolicyGroupInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.vpnServerConfigurationName = Utils.getValueFromIdByName(innerObject.id(), "vpnServerConfigurations");
        this.configurationPolicyGroupName = Utils.getValueFromIdByName(innerObject.id(), "configurationPolicyGroups");
    }

    public VpnServerConfigurationPolicyGroup refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConfigurationPolicyGroups()
                .getWithResponse(
                    resourceGroupName, vpnServerConfigurationName, configurationPolicyGroupName, Context.NONE)
                .getValue();
        return this;
    }

    public VpnServerConfigurationPolicyGroup refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConfigurationPolicyGroups()
                .getWithResponse(resourceGroupName, vpnServerConfigurationName, configurationPolicyGroupName, context)
                .getValue();
        return this;
    }

    public VpnServerConfigurationPolicyGroupImpl withName(String name) {
        this.innerModel().withName(name);
        return this;
    }

    public VpnServerConfigurationPolicyGroupImpl withIsDefault(Boolean isDefault) {
        this.innerModel().withIsDefault(isDefault);
        return this;
    }

    public VpnServerConfigurationPolicyGroupImpl withPriority(Integer priority) {
        this.innerModel().withPriority(priority);
        return this;
    }

    public VpnServerConfigurationPolicyGroupImpl withPolicyMembers(
        List<VpnServerConfigurationPolicyGroupMember> policyMembers) {
        this.innerModel().withPolicyMembers(policyMembers);
        return this;
    }
}
