// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.fluent.VipSwapsClient;
import com.azure.resourcemanager.network.generated.fluent.models.SwapResourceInner;
import com.azure.resourcemanager.network.generated.fluent.models.SwapResourceListResultInner;
import com.azure.resourcemanager.network.generated.models.SwapResource;
import com.azure.resourcemanager.network.generated.models.SwapResourceListResult;
import com.azure.resourcemanager.network.generated.models.VipSwaps;

public final class VipSwapsImpl implements VipSwaps {
    private static final ClientLogger LOGGER = new ClientLogger(VipSwapsImpl.class);

    private final VipSwapsClient innerClient;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public VipSwapsImpl(
        VipSwapsClient innerClient, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<SwapResource> getWithResponse(String groupName, String resourceName, Context context) {
        Response<SwapResourceInner> inner = this.serviceClient().getWithResponse(groupName, resourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SwapResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SwapResource get(String groupName, String resourceName) {
        SwapResourceInner inner = this.serviceClient().get(groupName, resourceName);
        if (inner != null) {
            return new SwapResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void create(String groupName, String resourceName, SwapResourceInner parameters) {
        this.serviceClient().create(groupName, resourceName, parameters);
    }

    public void create(String groupName, String resourceName, SwapResourceInner parameters, Context context) {
        this.serviceClient().create(groupName, resourceName, parameters, context);
    }

    public Response<SwapResourceListResult> listWithResponse(String groupName, String resourceName, Context context) {
        Response<SwapResourceListResultInner> inner =
            this.serviceClient().listWithResponse(groupName, resourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SwapResourceListResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SwapResourceListResult list(String groupName, String resourceName) {
        SwapResourceListResultInner inner = this.serviceClient().list(groupName, resourceName);
        if (inner != null) {
            return new SwapResourceListResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private VipSwapsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}
