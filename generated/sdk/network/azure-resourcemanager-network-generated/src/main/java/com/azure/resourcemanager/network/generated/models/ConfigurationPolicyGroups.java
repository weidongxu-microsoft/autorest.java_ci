// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ConfigurationPolicyGroups. */
public interface ConfigurationPolicyGroups {
    /**
     * Deletes a ConfigurationPolicyGroup.
     *
     * @param resourceGroupName The resource group name of the ConfigurationPolicyGroup.
     * @param vpnServerConfigurationName The name of the VpnServerConfiguration.
     * @param configurationPolicyGroupName The name of the ConfigurationPolicyGroup.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String vpnServerConfigurationName, String configurationPolicyGroupName);

    /**
     * Deletes a ConfigurationPolicyGroup.
     *
     * @param resourceGroupName The resource group name of the ConfigurationPolicyGroup.
     * @param vpnServerConfigurationName The name of the VpnServerConfiguration.
     * @param configurationPolicyGroupName The name of the ConfigurationPolicyGroup.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(
        String resourceGroupName,
        String vpnServerConfigurationName,
        String configurationPolicyGroupName,
        Context context);

    /**
     * Retrieves the details of a ConfigurationPolicyGroup.
     *
     * @param resourceGroupName The resource group name of the VpnServerConfiguration.
     * @param vpnServerConfigurationName The name of the VpnServerConfiguration.
     * @param configurationPolicyGroupName The name of the ConfigurationPolicyGroup being retrieved.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vpnServerConfigurationPolicyGroup Resource.
     */
    VpnServerConfigurationPolicyGroup get(
        String resourceGroupName, String vpnServerConfigurationName, String configurationPolicyGroupName);

    /**
     * Retrieves the details of a ConfigurationPolicyGroup.
     *
     * @param resourceGroupName The resource group name of the VpnServerConfiguration.
     * @param vpnServerConfigurationName The name of the VpnServerConfiguration.
     * @param configurationPolicyGroupName The name of the ConfigurationPolicyGroup being retrieved.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vpnServerConfigurationPolicyGroup Resource along with {@link Response}.
     */
    Response<VpnServerConfigurationPolicyGroup> getWithResponse(
        String resourceGroupName,
        String vpnServerConfigurationName,
        String configurationPolicyGroupName,
        Context context);

    /**
     * Lists all the configurationPolicyGroups in a resource group for a vpnServerConfiguration.
     *
     * @param resourceGroupName The resource group name of the VpnServerConfiguration.
     * @param vpnServerConfigurationName The name of the VpnServerConfiguration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the request to list VpnServerConfigurationPolicyGroups as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<VpnServerConfigurationPolicyGroup> listByVpnServerConfiguration(
        String resourceGroupName, String vpnServerConfigurationName);

    /**
     * Lists all the configurationPolicyGroups in a resource group for a vpnServerConfiguration.
     *
     * @param resourceGroupName The resource group name of the VpnServerConfiguration.
     * @param vpnServerConfigurationName The name of the VpnServerConfiguration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the request to list VpnServerConfigurationPolicyGroups as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<VpnServerConfigurationPolicyGroup> listByVpnServerConfiguration(
        String resourceGroupName, String vpnServerConfigurationName, Context context);

    /**
     * Retrieves the details of a ConfigurationPolicyGroup.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vpnServerConfigurationPolicyGroup Resource along with {@link Response}.
     */
    VpnServerConfigurationPolicyGroup getById(String id);

    /**
     * Retrieves the details of a ConfigurationPolicyGroup.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vpnServerConfigurationPolicyGroup Resource along with {@link Response}.
     */
    Response<VpnServerConfigurationPolicyGroup> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a ConfigurationPolicyGroup.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a ConfigurationPolicyGroup.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new VpnServerConfigurationPolicyGroup resource.
     *
     * @param name resource name.
     * @return the first stage of the new VpnServerConfigurationPolicyGroup definition.
     */
    VpnServerConfigurationPolicyGroup.DefinitionStages.Blank define(String name);
}
