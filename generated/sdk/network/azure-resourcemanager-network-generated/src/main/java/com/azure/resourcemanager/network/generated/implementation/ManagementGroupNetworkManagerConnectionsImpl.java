// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.fluent.ManagementGroupNetworkManagerConnectionsClient;
import com.azure.resourcemanager.network.generated.fluent.models.NetworkManagerConnectionInner;
import com.azure.resourcemanager.network.generated.models.ManagementGroupNetworkManagerConnections;
import com.azure.resourcemanager.network.generated.models.NetworkManagerConnection;

public final class ManagementGroupNetworkManagerConnectionsImpl implements ManagementGroupNetworkManagerConnections {
    private static final ClientLogger LOGGER = new ClientLogger(ManagementGroupNetworkManagerConnectionsImpl.class);

    private final ManagementGroupNetworkManagerConnectionsClient innerClient;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public ManagementGroupNetworkManagerConnectionsImpl(
        ManagementGroupNetworkManagerConnectionsClient innerClient,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public NetworkManagerConnection createOrUpdate(
        String managementGroupId, String networkManagerConnectionName, NetworkManagerConnectionInner parameters) {
        NetworkManagerConnectionInner inner =
            this.serviceClient().createOrUpdate(managementGroupId, networkManagerConnectionName, parameters);
        if (inner != null) {
            return new NetworkManagerConnectionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<NetworkManagerConnection> createOrUpdateWithResponse(
        String managementGroupId,
        String networkManagerConnectionName,
        NetworkManagerConnectionInner parameters,
        Context context) {
        Response<NetworkManagerConnectionInner> inner =
            this
                .serviceClient()
                .createOrUpdateWithResponse(managementGroupId, networkManagerConnectionName, parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new NetworkManagerConnectionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public NetworkManagerConnection get(String managementGroupId, String networkManagerConnectionName) {
        NetworkManagerConnectionInner inner = this.serviceClient().get(managementGroupId, networkManagerConnectionName);
        if (inner != null) {
            return new NetworkManagerConnectionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<NetworkManagerConnection> getWithResponse(
        String managementGroupId, String networkManagerConnectionName, Context context) {
        Response<NetworkManagerConnectionInner> inner =
            this.serviceClient().getWithResponse(managementGroupId, networkManagerConnectionName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new NetworkManagerConnectionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void deleteByResourceGroup(String managementGroupId, String networkManagerConnectionName) {
        this.serviceClient().delete(managementGroupId, networkManagerConnectionName);
    }

    public Response<Void> deleteWithResponse(
        String managementGroupId, String networkManagerConnectionName, Context context) {
        return this.serviceClient().deleteWithResponse(managementGroupId, networkManagerConnectionName, context);
    }

    public PagedIterable<NetworkManagerConnection> list(String managementGroupId) {
        PagedIterable<NetworkManagerConnectionInner> inner = this.serviceClient().list(managementGroupId);
        return Utils.mapPage(inner, inner1 -> new NetworkManagerConnectionImpl(inner1, this.manager()));
    }

    public PagedIterable<NetworkManagerConnection> list(
        String managementGroupId, Integer top, String skipToken, Context context) {
        PagedIterable<NetworkManagerConnectionInner> inner =
            this.serviceClient().list(managementGroupId, top, skipToken, context);
        return Utils.mapPage(inner, inner1 -> new NetworkManagerConnectionImpl(inner1, this.manager()));
    }

    private ManagementGroupNetworkManagerConnectionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}
