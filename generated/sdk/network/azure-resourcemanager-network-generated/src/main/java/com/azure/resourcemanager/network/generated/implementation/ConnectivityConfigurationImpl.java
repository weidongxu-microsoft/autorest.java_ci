// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.ConnectivityConfigurationInner;
import com.azure.resourcemanager.network.generated.models.ConnectivityConfiguration;
import com.azure.resourcemanager.network.generated.models.ConnectivityGroupItem;
import com.azure.resourcemanager.network.generated.models.ConnectivityTopology;
import com.azure.resourcemanager.network.generated.models.DeleteExistingPeering;
import com.azure.resourcemanager.network.generated.models.Hub;
import com.azure.resourcemanager.network.generated.models.IsGlobal;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;
import java.util.Collections;
import java.util.List;

public final class ConnectivityConfigurationImpl
    implements ConnectivityConfiguration, ConnectivityConfiguration.Definition, ConnectivityConfiguration.Update {
    private ConnectivityConfigurationInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String description() {
        return this.innerModel().description();
    }

    public ConnectivityTopology connectivityTopology() {
        return this.innerModel().connectivityTopology();
    }

    public List<Hub> hubs() {
        List<Hub> inner = this.innerModel().hubs();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public IsGlobal isGlobal() {
        return this.innerModel().isGlobal();
    }

    public List<ConnectivityGroupItem> appliesToGroups() {
        List<ConnectivityGroupItem> inner = this.innerModel().appliesToGroups();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public DeleteExistingPeering deleteExistingPeering() {
        return this.innerModel().deleteExistingPeering();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ConnectivityConfigurationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkManagerName;

    private String configurationName;

    public ConnectivityConfigurationImpl withExistingNetworkManager(
        String resourceGroupName, String networkManagerName) {
        this.resourceGroupName = resourceGroupName;
        this.networkManagerName = networkManagerName;
        return this;
    }

    public ConnectivityConfiguration create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectivityConfigurations()
                .createOrUpdateWithResponse(
                    resourceGroupName, networkManagerName, configurationName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ConnectivityConfiguration create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectivityConfigurations()
                .createOrUpdateWithResponse(
                    resourceGroupName, networkManagerName, configurationName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ConnectivityConfigurationImpl(
        String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new ConnectivityConfigurationInner();
        this.serviceManager = serviceManager;
        this.configurationName = name;
    }

    public ConnectivityConfigurationImpl update() {
        return this;
    }

    public ConnectivityConfiguration apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectivityConfigurations()
                .createOrUpdateWithResponse(
                    resourceGroupName, networkManagerName, configurationName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ConnectivityConfiguration apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectivityConfigurations()
                .createOrUpdateWithResponse(
                    resourceGroupName, networkManagerName, configurationName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ConnectivityConfigurationImpl(
        ConnectivityConfigurationInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkManagerName = Utils.getValueFromIdByName(innerObject.id(), "networkManagers");
        this.configurationName = Utils.getValueFromIdByName(innerObject.id(), "connectivityConfigurations");
    }

    public ConnectivityConfiguration refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectivityConfigurations()
                .getWithResponse(resourceGroupName, networkManagerName, configurationName, Context.NONE)
                .getValue();
        return this;
    }

    public ConnectivityConfiguration refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectivityConfigurations()
                .getWithResponse(resourceGroupName, networkManagerName, configurationName, context)
                .getValue();
        return this;
    }

    public ConnectivityConfigurationImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public ConnectivityConfigurationImpl withConnectivityTopology(ConnectivityTopology connectivityTopology) {
        this.innerModel().withConnectivityTopology(connectivityTopology);
        return this;
    }

    public ConnectivityConfigurationImpl withHubs(List<Hub> hubs) {
        this.innerModel().withHubs(hubs);
        return this;
    }

    public ConnectivityConfigurationImpl withIsGlobal(IsGlobal isGlobal) {
        this.innerModel().withIsGlobal(isGlobal);
        return this;
    }

    public ConnectivityConfigurationImpl withAppliesToGroups(List<ConnectivityGroupItem> appliesToGroups) {
        this.innerModel().withAppliesToGroups(appliesToGroups);
        return this;
    }

    public ConnectivityConfigurationImpl withDeleteExistingPeering(DeleteExistingPeering deleteExistingPeering) {
        this.innerModel().withDeleteExistingPeering(deleteExistingPeering);
        return this;
    }
}
