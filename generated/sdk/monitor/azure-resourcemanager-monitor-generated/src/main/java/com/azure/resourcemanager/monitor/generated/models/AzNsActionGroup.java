// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Azure action group.
 */
@Fluent
public final class AzNsActionGroup implements JsonSerializable<AzNsActionGroup> {
    /*
     * Azure Action Group reference.
     */
    private List<String> actionGroup;

    /*
     * Custom subject override for all email ids in Azure action group
     */
    private String emailSubject;

    /*
     * Custom payload to be sent for all webhook URI in Azure action group
     */
    private String customWebhookPayload;

    /**
     * Creates an instance of AzNsActionGroup class.
     */
    public AzNsActionGroup() {
    }

    /**
     * Get the actionGroup property: Azure Action Group reference.
     * 
     * @return the actionGroup value.
     */
    public List<String> actionGroup() {
        return this.actionGroup;
    }

    /**
     * Set the actionGroup property: Azure Action Group reference.
     * 
     * @param actionGroup the actionGroup value to set.
     * @return the AzNsActionGroup object itself.
     */
    public AzNsActionGroup withActionGroup(List<String> actionGroup) {
        this.actionGroup = actionGroup;
        return this;
    }

    /**
     * Get the emailSubject property: Custom subject override for all email ids in Azure action group.
     * 
     * @return the emailSubject value.
     */
    public String emailSubject() {
        return this.emailSubject;
    }

    /**
     * Set the emailSubject property: Custom subject override for all email ids in Azure action group.
     * 
     * @param emailSubject the emailSubject value to set.
     * @return the AzNsActionGroup object itself.
     */
    public AzNsActionGroup withEmailSubject(String emailSubject) {
        this.emailSubject = emailSubject;
        return this;
    }

    /**
     * Get the customWebhookPayload property: Custom payload to be sent for all webhook URI in Azure action group.
     * 
     * @return the customWebhookPayload value.
     */
    public String customWebhookPayload() {
        return this.customWebhookPayload;
    }

    /**
     * Set the customWebhookPayload property: Custom payload to be sent for all webhook URI in Azure action group.
     * 
     * @param customWebhookPayload the customWebhookPayload value to set.
     * @return the AzNsActionGroup object itself.
     */
    public AzNsActionGroup withCustomWebhookPayload(String customWebhookPayload) {
        this.customWebhookPayload = customWebhookPayload;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("actionGroup", this.actionGroup, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("emailSubject", this.emailSubject);
        jsonWriter.writeStringField("customWebhookPayload", this.customWebhookPayload);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzNsActionGroup from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzNsActionGroup if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzNsActionGroup.
     */
    public static AzNsActionGroup fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzNsActionGroup deserializedAzNsActionGroup = new AzNsActionGroup();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("actionGroup".equals(fieldName)) {
                    List<String> actionGroup = reader.readArray(reader1 -> reader1.getString());
                    deserializedAzNsActionGroup.actionGroup = actionGroup;
                } else if ("emailSubject".equals(fieldName)) {
                    deserializedAzNsActionGroup.emailSubject = reader.getString();
                } else if ("customWebhookPayload".equals(fieldName)) {
                    deserializedAzNsActionGroup.customWebhookPayload = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzNsActionGroup;
        });
    }
}
