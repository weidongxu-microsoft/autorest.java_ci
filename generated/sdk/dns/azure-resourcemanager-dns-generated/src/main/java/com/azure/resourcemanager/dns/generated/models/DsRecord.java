// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dns.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A DS record. For more information about the DS record format, see RFC 4034: https://www.rfc-editor.org/rfc/rfc4034.
 */
@Fluent
public final class DsRecord {
    /*
     * The key tag value is used to determine which DNSKEY Resource Record is used for signature verification.
     */
    @JsonProperty(value = "keyTag")
    private Integer keyTag;

    /*
     * The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml
     */
    @JsonProperty(value = "algorithm")
    private Integer algorithm;

    /*
     * The digest entity.
     */
    @JsonProperty(value = "digest")
    private Digest digest;

    /**
     * Creates an instance of DsRecord class.
     */
    public DsRecord() {
    }

    /**
     * Get the keyTag property: The key tag value is used to determine which DNSKEY Resource Record is used for
     * signature verification.
     * 
     * @return the keyTag value.
     */
    public Integer keyTag() {
        return this.keyTag;
    }

    /**
     * Set the keyTag property: The key tag value is used to determine which DNSKEY Resource Record is used for
     * signature verification.
     * 
     * @param keyTag the keyTag value to set.
     * @return the DsRecord object itself.
     */
    public DsRecord withKeyTag(Integer keyTag) {
        this.keyTag = keyTag;
        return this;
    }

    /**
     * Get the algorithm property: The security algorithm type represents the standard security algorithm number of the
     * DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml.
     * 
     * @return the algorithm value.
     */
    public Integer algorithm() {
        return this.algorithm;
    }

    /**
     * Set the algorithm property: The security algorithm type represents the standard security algorithm number of the
     * DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml.
     * 
     * @param algorithm the algorithm value to set.
     * @return the DsRecord object itself.
     */
    public DsRecord withAlgorithm(Integer algorithm) {
        this.algorithm = algorithm;
        return this;
    }

    /**
     * Get the digest property: The digest entity.
     * 
     * @return the digest value.
     */
    public Digest digest() {
        return this.digest;
    }

    /**
     * Set the digest property: The digest entity.
     * 
     * @param digest the digest value to set.
     * @return the DsRecord object itself.
     */
    public DsRecord withDigest(Digest digest) {
        this.digest = digest;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (digest() != null) {
            digest().validate();
        }
    }
}
