// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dns.generated.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The delegation signer information.
 */
@Immutable
public final class DelegationSignerInfo {
    /*
     * The digest algorithm type represents the standard digest algorithm number used to construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml
     */
    @JsonProperty(value = "digestAlgorithmType", access = JsonProperty.Access.WRITE_ONLY)
    private Integer digestAlgorithmType;

    /*
     * The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.
     */
    @JsonProperty(value = "digestValue", access = JsonProperty.Access.WRITE_ONLY)
    private String digestValue;

    /*
     * The record represents a delegation signer (DS) record.
     */
    @JsonProperty(value = "record", access = JsonProperty.Access.WRITE_ONLY)
    private String record;

    /**
     * Creates an instance of DelegationSignerInfo class.
     */
    public DelegationSignerInfo() {
    }

    /**
     * Get the digestAlgorithmType property: The digest algorithm type represents the standard digest algorithm number used to construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml.
     * 
     * @return the digestAlgorithmType value.
     */
    public Integer digestAlgorithmType() {
        return this.digestAlgorithmType;
    }

    /**
     * Get the digestValue property: The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.
     * 
     * @return the digestValue value.
     */
    public String digestValue() {
        return this.digestValue;
    }

    /**
     * Get the record property: The record represents a delegation signer (DS) record.
     * 
     * @return the record value.
     */
    public String record() {
        return this.record;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
