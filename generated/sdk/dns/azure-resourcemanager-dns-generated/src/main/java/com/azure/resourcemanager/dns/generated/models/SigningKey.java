// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dns.generated.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Represents the signing key.
 */
@Immutable
public final class SigningKey {
    /*
     * The delegation signer information.
     */
    @JsonProperty(value = "delegationSignerInfo", access = JsonProperty.Access.WRITE_ONLY)
    private List<DelegationSignerInfo> delegationSignerInfo;

    /*
     * The flags specifies how the key is used.
     */
    @JsonProperty(value = "flags", access = JsonProperty.Access.WRITE_ONLY)
    private Integer flags;

    /*
     * The key tag value of the DNSKEY Resource Record.
     */
    @JsonProperty(value = "keyTag", access = JsonProperty.Access.WRITE_ONLY)
    private Integer keyTag;

    /*
     * The protocol value. The value is always 3.
     */
    @JsonProperty(value = "protocol", access = JsonProperty.Access.WRITE_ONLY)
    private Integer protocol;

    /*
     * The public key, represented as a Base64 encoding.
     */
    @JsonProperty(value = "publicKey", access = JsonProperty.Access.WRITE_ONLY)
    private String publicKey;

    /*
     * The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml
     */
    @JsonProperty(value = "securityAlgorithmType", access = JsonProperty.Access.WRITE_ONLY)
    private Integer securityAlgorithmType;

    /**
     * Creates an instance of SigningKey class.
     */
    public SigningKey() {
    }

    /**
     * Get the delegationSignerInfo property: The delegation signer information.
     * 
     * @return the delegationSignerInfo value.
     */
    public List<DelegationSignerInfo> delegationSignerInfo() {
        return this.delegationSignerInfo;
    }

    /**
     * Get the flags property: The flags specifies how the key is used.
     * 
     * @return the flags value.
     */
    public Integer flags() {
        return this.flags;
    }

    /**
     * Get the keyTag property: The key tag value of the DNSKEY Resource Record.
     * 
     * @return the keyTag value.
     */
    public Integer keyTag() {
        return this.keyTag;
    }

    /**
     * Get the protocol property: The protocol value. The value is always 3.
     * 
     * @return the protocol value.
     */
    public Integer protocol() {
        return this.protocol;
    }

    /**
     * Get the publicKey property: The public key, represented as a Base64 encoding.
     * 
     * @return the publicKey value.
     */
    public String publicKey() {
        return this.publicKey;
    }

    /**
     * Get the securityAlgorithmType property: The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml.
     * 
     * @return the securityAlgorithmType value.
     */
    public Integer securityAlgorithmType() {
        return this.securityAlgorithmType;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (delegationSignerInfo() != null) {
            delegationSignerInfo().forEach(e -> e.validate());
        }
    }
}
