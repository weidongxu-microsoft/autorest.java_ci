// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcegraph.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.resourcemanager.resourcegraph.generated.models.ResultKind;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.Map;

/**
 * Graph Query entity definition.
 */
@Fluent
public final class GraphQueryResourceInner extends Resource {
    /*
     * Metadata describing a graph query for an Azure resource.
     */
    @JsonProperty(value = "properties")
    private GraphQueryProperties innerProperties;

    /*
     * This will be used to handle Optimistic Concurrency. If not present, it will always overwrite the existing
     * resource without checking conflict.
     */
    @JsonProperty(value = "etag")
    private String etag;

    /**
     * Creates an instance of GraphQueryResourceInner class.
     */
    public GraphQueryResourceInner() {
    }

    /**
     * Get the innerProperties property: Metadata describing a graph query for an Azure resource.
     * 
     * @return the innerProperties value.
     */
    private GraphQueryProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the etag property: This will be used to handle Optimistic Concurrency. If not present, it will always
     * overwrite the existing resource without checking conflict.
     * 
     * @return the etag value.
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Set the etag property: This will be used to handle Optimistic Concurrency. If not present, it will always
     * overwrite the existing resource without checking conflict.
     * 
     * @param etag the etag value to set.
     * @return the GraphQueryResourceInner object itself.
     */
    public GraphQueryResourceInner withEtag(String etag) {
        this.etag = etag;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GraphQueryResourceInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GraphQueryResourceInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the timeModified property: Date and time in UTC of the last modification that was made to this graph query
     * definition.
     * 
     * @return the timeModified value.
     */
    public OffsetDateTime timeModified() {
        return this.innerProperties() == null ? null : this.innerProperties().timeModified();
    }

    /**
     * Get the description property: The description of a graph query.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: The description of a graph query.
     * 
     * @param description the description value to set.
     * @return the GraphQueryResourceInner object itself.
     */
    public GraphQueryResourceInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GraphQueryProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the query property: KQL query that will be graph.
     * 
     * @return the query value.
     */
    public String query() {
        return this.innerProperties() == null ? null : this.innerProperties().query();
    }

    /**
     * Set the query property: KQL query that will be graph.
     * 
     * @param query the query value to set.
     * @return the GraphQueryResourceInner object itself.
     */
    public GraphQueryResourceInner withQuery(String query) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GraphQueryProperties();
        }
        this.innerProperties().withQuery(query);
        return this;
    }

    /**
     * Get the resultKind property: Enum indicating a type of graph query.
     * 
     * @return the resultKind value.
     */
    public ResultKind resultKind() {
        return this.innerProperties() == null ? null : this.innerProperties().resultKind();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
