// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.databoxedge.generated.models.RemoteSupportSettings;
import java.io.IOException;
import java.util.List;

/**
 * The properties of remote support settings.
 */
@Fluent
public final class DiagnosticRemoteSupportSettingsProperties
    implements JsonSerializable<DiagnosticRemoteSupportSettingsProperties> {
    /*
     * Remote support settings list according to the RemoteApplicationType
     */
    private List<RemoteSupportSettings> remoteSupportSettingsList;

    /**
     * Creates an instance of DiagnosticRemoteSupportSettingsProperties class.
     */
    public DiagnosticRemoteSupportSettingsProperties() {
    }

    /**
     * Get the remoteSupportSettingsList property: Remote support settings list according to the RemoteApplicationType.
     * 
     * @return the remoteSupportSettingsList value.
     */
    public List<RemoteSupportSettings> remoteSupportSettingsList() {
        return this.remoteSupportSettingsList;
    }

    /**
     * Set the remoteSupportSettingsList property: Remote support settings list according to the RemoteApplicationType.
     * 
     * @param remoteSupportSettingsList the remoteSupportSettingsList value to set.
     * @return the DiagnosticRemoteSupportSettingsProperties object itself.
     */
    public DiagnosticRemoteSupportSettingsProperties
        withRemoteSupportSettingsList(List<RemoteSupportSettings> remoteSupportSettingsList) {
        this.remoteSupportSettingsList = remoteSupportSettingsList;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (remoteSupportSettingsList() != null) {
            remoteSupportSettingsList().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("remoteSupportSettingsList", this.remoteSupportSettingsList,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DiagnosticRemoteSupportSettingsProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DiagnosticRemoteSupportSettingsProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DiagnosticRemoteSupportSettingsProperties.
     */
    public static DiagnosticRemoteSupportSettingsProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DiagnosticRemoteSupportSettingsProperties deserializedDiagnosticRemoteSupportSettingsProperties
                = new DiagnosticRemoteSupportSettingsProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("remoteSupportSettingsList".equals(fieldName)) {
                    List<RemoteSupportSettings> remoteSupportSettingsList
                        = reader.readArray(reader1 -> RemoteSupportSettings.fromJson(reader1));
                    deserializedDiagnosticRemoteSupportSettingsProperties.remoteSupportSettingsList
                        = remoteSupportSettingsList;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDiagnosticRemoteSupportSettingsProperties;
        });
    }
}
