// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.databoxedge.generated.models.EdgeProfile;
import com.azure.resourcemanager.databoxedge.generated.models.RoleStatus;
import java.io.IOException;

/**
 * CloudEdgeManagement Role properties.
 */
@Fluent
public final class CloudEdgeManagementRoleProperties implements JsonSerializable<CloudEdgeManagementRoleProperties> {
    /*
     * Local Edge Management Status
     */
    private RoleStatus localManagementStatus;

    /*
     * Edge Profile of the resource
     */
    private EdgeProfile edgeProfile;

    /*
     * Role status.
     */
    private RoleStatus roleStatus;

    /**
     * Creates an instance of CloudEdgeManagementRoleProperties class.
     */
    public CloudEdgeManagementRoleProperties() {
    }

    /**
     * Get the localManagementStatus property: Local Edge Management Status.
     * 
     * @return the localManagementStatus value.
     */
    public RoleStatus localManagementStatus() {
        return this.localManagementStatus;
    }

    /**
     * Get the edgeProfile property: Edge Profile of the resource.
     * 
     * @return the edgeProfile value.
     */
    public EdgeProfile edgeProfile() {
        return this.edgeProfile;
    }

    /**
     * Get the roleStatus property: Role status.
     * 
     * @return the roleStatus value.
     */
    public RoleStatus roleStatus() {
        return this.roleStatus;
    }

    /**
     * Set the roleStatus property: Role status.
     * 
     * @param roleStatus the roleStatus value to set.
     * @return the CloudEdgeManagementRoleProperties object itself.
     */
    public CloudEdgeManagementRoleProperties withRoleStatus(RoleStatus roleStatus) {
        this.roleStatus = roleStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (edgeProfile() != null) {
            edgeProfile().validate();
        }
        if (roleStatus() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property roleStatus in model CloudEdgeManagementRoleProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CloudEdgeManagementRoleProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("roleStatus", this.roleStatus == null ? null : this.roleStatus.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CloudEdgeManagementRoleProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CloudEdgeManagementRoleProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CloudEdgeManagementRoleProperties.
     */
    public static CloudEdgeManagementRoleProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CloudEdgeManagementRoleProperties deserializedCloudEdgeManagementRoleProperties
                = new CloudEdgeManagementRoleProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("roleStatus".equals(fieldName)) {
                    deserializedCloudEdgeManagementRoleProperties.roleStatus
                        = RoleStatus.fromString(reader.getString());
                } else if ("localManagementStatus".equals(fieldName)) {
                    deserializedCloudEdgeManagementRoleProperties.localManagementStatus
                        = RoleStatus.fromString(reader.getString());
                } else if ("edgeProfile".equals(fieldName)) {
                    deserializedCloudEdgeManagementRoleProperties.edgeProfile = EdgeProfile.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCloudEdgeManagementRoleProperties;
        });
    }
}
