// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Kubernetes role network resource.
 */
@Immutable
public final class KubernetesRoleNetwork implements JsonSerializable<KubernetesRoleNetwork> {
    /*
     * Cni configuration
     */
    private CniConfig cniConfig;

    /*
     * Load balancer configuration
     */
    private LoadBalancerConfig loadBalancerConfig;

    /**
     * Creates an instance of KubernetesRoleNetwork class.
     */
    public KubernetesRoleNetwork() {
    }

    /**
     * Get the cniConfig property: Cni configuration.
     * 
     * @return the cniConfig value.
     */
    public CniConfig cniConfig() {
        return this.cniConfig;
    }

    /**
     * Get the loadBalancerConfig property: Load balancer configuration.
     * 
     * @return the loadBalancerConfig value.
     */
    public LoadBalancerConfig loadBalancerConfig() {
        return this.loadBalancerConfig;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (cniConfig() != null) {
            cniConfig().validate();
        }
        if (loadBalancerConfig() != null) {
            loadBalancerConfig().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KubernetesRoleNetwork from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KubernetesRoleNetwork if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the KubernetesRoleNetwork.
     */
    public static KubernetesRoleNetwork fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            KubernetesRoleNetwork deserializedKubernetesRoleNetwork = new KubernetesRoleNetwork();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("cniConfig".equals(fieldName)) {
                    deserializedKubernetesRoleNetwork.cniConfig = CniConfig.fromJson(reader);
                } else if ("loadBalancerConfig".equals(fieldName)) {
                    deserializedKubernetesRoleNetwork.loadBalancerConfig = LoadBalancerConfig.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedKubernetesRoleNetwork;
        });
    }
}
