// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details about Edge Profile for the resource.
 */
@Fluent
public final class EdgeProfile implements JsonSerializable<EdgeProfile> {
    /*
     * Edge Profile Subscription
     */
    private EdgeProfileSubscription subscription;

    /**
     * Creates an instance of EdgeProfile class.
     */
    public EdgeProfile() {
    }

    /**
     * Get the subscription property: Edge Profile Subscription.
     * 
     * @return the subscription value.
     */
    public EdgeProfileSubscription subscription() {
        return this.subscription;
    }

    /**
     * Set the subscription property: Edge Profile Subscription.
     * 
     * @param subscription the subscription value to set.
     * @return the EdgeProfile object itself.
     */
    public EdgeProfile withSubscription(EdgeProfileSubscription subscription) {
        this.subscription = subscription;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (subscription() != null) {
            subscription().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("subscription", this.subscription);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EdgeProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EdgeProfile if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the EdgeProfile.
     */
    public static EdgeProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EdgeProfile deserializedEdgeProfile = new EdgeProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("subscription".equals(fieldName)) {
                    deserializedEdgeProfile.subscription = EdgeProfileSubscription.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEdgeProfile;
        });
    }
}
