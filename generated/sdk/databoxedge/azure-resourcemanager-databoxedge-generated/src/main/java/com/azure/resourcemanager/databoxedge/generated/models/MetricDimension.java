// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The metric dimension.
 */
@Fluent
public final class MetricDimension implements JsonSerializable<MetricDimension> {
    /*
     * The dimension type.
     */
    private String sourceType;

    /*
     * The dimension value.
     */
    private String sourceName;

    /**
     * Creates an instance of MetricDimension class.
     */
    public MetricDimension() {
    }

    /**
     * Get the sourceType property: The dimension type.
     * 
     * @return the sourceType value.
     */
    public String sourceType() {
        return this.sourceType;
    }

    /**
     * Set the sourceType property: The dimension type.
     * 
     * @param sourceType the sourceType value to set.
     * @return the MetricDimension object itself.
     */
    public MetricDimension withSourceType(String sourceType) {
        this.sourceType = sourceType;
        return this;
    }

    /**
     * Get the sourceName property: The dimension value.
     * 
     * @return the sourceName value.
     */
    public String sourceName() {
        return this.sourceName;
    }

    /**
     * Set the sourceName property: The dimension value.
     * 
     * @param sourceName the sourceName value to set.
     * @return the MetricDimension object itself.
     */
    public MetricDimension withSourceName(String sourceName) {
        this.sourceName = sourceName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sourceType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property sourceType in model MetricDimension"));
        }
        if (sourceName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property sourceName in model MetricDimension"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(MetricDimension.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("sourceType", this.sourceType);
        jsonWriter.writeStringField("sourceName", this.sourceName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MetricDimension from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MetricDimension if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MetricDimension.
     */
    public static MetricDimension fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MetricDimension deserializedMetricDimension = new MetricDimension();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sourceType".equals(fieldName)) {
                    deserializedMetricDimension.sourceType = reader.getString();
                } else if ("sourceName".equals(fieldName)) {
                    deserializedMetricDimension.sourceName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMetricDimension;
        });
    }
}
