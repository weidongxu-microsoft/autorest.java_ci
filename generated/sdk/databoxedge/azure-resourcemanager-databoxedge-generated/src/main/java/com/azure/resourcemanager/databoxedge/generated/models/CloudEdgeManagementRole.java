// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.databoxedge.generated.fluent.models.CloudEdgeManagementRoleProperties;
import com.azure.resourcemanager.databoxedge.generated.fluent.models.RoleInner;
import java.io.IOException;

/**
 * The preview of Virtual Machine Cloud Management from the Azure supports deploying and managing VMs on your Azure
 * Stack Edge device from Azure Portal.
 * For more information, refer to:
 * https://docs.microsoft.com/en-us/azure/databox-online/azure-stack-edge-gpu-virtual-machine-overview
 * By using this feature, you agree to the preview legal terms. See the
 * https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/ for additional details.
 */
@Fluent
public final class CloudEdgeManagementRole extends RoleInner {
    /*
     * Role type.
     */
    private RoleTypes kind = RoleTypes.CLOUD_EDGE_MANAGEMENT;

    /*
     * Properties specific to CloudEdgeManagementRole role.
     */
    private CloudEdgeManagementRoleProperties innerProperties;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * Metadata pertaining to creation and last modification of Role
     */
    private SystemData systemData;

    /**
     * Creates an instance of CloudEdgeManagementRole class.
     */
    public CloudEdgeManagementRole() {
    }

    /**
     * Get the kind property: Role type.
     * 
     * @return the kind value.
     */
    @Override
    public RoleTypes kind() {
        return this.kind;
    }

    /**
     * Get the innerProperties property: Properties specific to CloudEdgeManagementRole role.
     * 
     * @return the innerProperties value.
     */
    private CloudEdgeManagementRoleProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of Role.
     * 
     * @return the systemData value.
     */
    @Override
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the localManagementStatus property: Local Edge Management Status.
     * 
     * @return the localManagementStatus value.
     */
    public RoleStatus localManagementStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().localManagementStatus();
    }

    /**
     * Get the edgeProfile property: Edge Profile of the resource.
     * 
     * @return the edgeProfile value.
     */
    public EdgeProfile edgeProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().edgeProfile();
    }

    /**
     * Get the roleStatus property: Role status.
     * 
     * @return the roleStatus value.
     */
    public RoleStatus roleStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().roleStatus();
    }

    /**
     * Set the roleStatus property: Role status.
     * 
     * @param roleStatus the roleStatus value to set.
     * @return the CloudEdgeManagementRole object itself.
     */
    public CloudEdgeManagementRole withRoleStatus(RoleStatus roleStatus) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudEdgeManagementRoleProperties();
        }
        this.innerProperties().withRoleStatus(roleStatus);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CloudEdgeManagementRole from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CloudEdgeManagementRole if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CloudEdgeManagementRole.
     */
    public static CloudEdgeManagementRole fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CloudEdgeManagementRole deserializedCloudEdgeManagementRole = new CloudEdgeManagementRole();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedCloudEdgeManagementRole.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedCloudEdgeManagementRole.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedCloudEdgeManagementRole.type = reader.getString();
                } else if ("systemData".equals(fieldName)) {
                    deserializedCloudEdgeManagementRole.systemData = SystemData.fromJson(reader);
                } else if ("kind".equals(fieldName)) {
                    deserializedCloudEdgeManagementRole.kind = RoleTypes.fromString(reader.getString());
                } else if ("properties".equals(fieldName)) {
                    deserializedCloudEdgeManagementRole.innerProperties
                        = CloudEdgeManagementRoleProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCloudEdgeManagementRole;
        });
    }
}
