// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.operationalinsights.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.operationalinsights.generated.fluent.models.TableInner;
import com.azure.resourcemanager.operationalinsights.generated.models.Table;

public final class TableImpl implements Table, Table.Definition, Table.Update {
    private TableInner innerObject;

    private final com.azure.resourcemanager.operationalinsights.generated.LogAnalyticsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Integer retentionInDays() {
        return this.innerModel().retentionInDays();
    }

    public Boolean isTroubleshootingAllowed() {
        return this.innerModel().isTroubleshootingAllowed();
    }

    public Boolean isTroubleshootEnabled() {
        return this.innerModel().isTroubleshootEnabled();
    }

    public String lastTroubleshootDate() {
        return this.innerModel().lastTroubleshootDate();
    }

    public TableInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.operationalinsights.generated.LogAnalyticsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String tableName;

    public TableImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public Table create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getTables()
                .createWithResponse(resourceGroupName, workspaceName, tableName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Table create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getTables()
                .createWithResponse(resourceGroupName, workspaceName, tableName, this.innerModel(), context)
                .getValue();
        return this;
    }

    TableImpl(String name, com.azure.resourcemanager.operationalinsights.generated.LogAnalyticsManager serviceManager) {
        this.innerObject = new TableInner();
        this.serviceManager = serviceManager;
        this.tableName = name;
    }

    public TableImpl update() {
        return this;
    }

    public Table apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getTables()
                .updateWithResponse(resourceGroupName, workspaceName, tableName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Table apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getTables()
                .updateWithResponse(resourceGroupName, workspaceName, tableName, this.innerModel(), context)
                .getValue();
        return this;
    }

    TableImpl(
        TableInner innerObject,
        com.azure.resourcemanager.operationalinsights.generated.LogAnalyticsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourcegroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.tableName = Utils.getValueFromIdByName(innerObject.id(), "tables");
    }

    public Table refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getTables()
                .getWithResponse(resourceGroupName, workspaceName, tableName, Context.NONE)
                .getValue();
        return this;
    }

    public Table refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getTables()
                .getWithResponse(resourceGroupName, workspaceName, tableName, context)
                .getValue();
        return this;
    }

    public TableImpl withRetentionInDays(Integer retentionInDays) {
        this.innerModel().withRetentionInDays(retentionInDays);
        return this;
    }

    public TableImpl withIsTroubleshootEnabled(Boolean isTroubleshootEnabled) {
        this.innerModel().withIsTroubleshootEnabled(isTroubleshootEnabled);
        return this;
    }
}
