// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.keyvault.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The ManagedHsmRotationPolicy model. */
@Fluent
public final class ManagedHsmRotationPolicy {
    /*
     * The attributes of key rotation policy.
     */
    @JsonProperty(value = "attributes")
    private ManagedHsmKeyRotationPolicyAttributes attributes;

    /*
     * The lifetimeActions for key rotation action.
     */
    @JsonProperty(value = "lifetimeActions")
    private List<ManagedHsmLifetimeAction> lifetimeActions;

    /** Creates an instance of ManagedHsmRotationPolicy class. */
    public ManagedHsmRotationPolicy() {
    }

    /**
     * Get the attributes property: The attributes of key rotation policy.
     *
     * @return the attributes value.
     */
    public ManagedHsmKeyRotationPolicyAttributes attributes() {
        return this.attributes;
    }

    /**
     * Set the attributes property: The attributes of key rotation policy.
     *
     * @param attributes the attributes value to set.
     * @return the ManagedHsmRotationPolicy object itself.
     */
    public ManagedHsmRotationPolicy withAttributes(ManagedHsmKeyRotationPolicyAttributes attributes) {
        this.attributes = attributes;
        return this;
    }

    /**
     * Get the lifetimeActions property: The lifetimeActions for key rotation action.
     *
     * @return the lifetimeActions value.
     */
    public List<ManagedHsmLifetimeAction> lifetimeActions() {
        return this.lifetimeActions;
    }

    /**
     * Set the lifetimeActions property: The lifetimeActions for key rotation action.
     *
     * @param lifetimeActions the lifetimeActions value to set.
     * @return the ManagedHsmRotationPolicy object itself.
     */
    public ManagedHsmRotationPolicy withLifetimeActions(List<ManagedHsmLifetimeAction> lifetimeActions) {
        this.lifetimeActions = lifetimeActions;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (attributes() != null) {
            attributes().validate();
        }
        if (lifetimeActions() != null) {
            lifetimeActions().forEach(e -> e.validate());
        }
    }
}
