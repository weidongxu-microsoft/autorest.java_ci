// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.keyvault.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ManagedHsmKeys. */
public interface ManagedHsmKeys {
    /**
     * Gets the current version of the specified key from the specified managed HSM.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name The name of the Managed HSM Pool within the specified resource group.
     * @param keyName The name of the key to be created. The value you provide may be copied globally for the purpose of
     *     running the service. The value provided should not include personally identifiable or sensitive information.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current version of the specified key from the specified managed HSM along with {@link Response}.
     */
    Response<ManagedHsmKey> getWithResponse(String resourceGroupName, String name, String keyName, Context context);

    /**
     * Gets the current version of the specified key from the specified managed HSM.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name The name of the Managed HSM Pool within the specified resource group.
     * @param keyName The name of the key to be created. The value you provide may be copied globally for the purpose of
     *     running the service. The value provided should not include personally identifiable or sensitive information.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current version of the specified key from the specified managed HSM.
     */
    ManagedHsmKey get(String resourceGroupName, String name, String keyName);

    /**
     * Lists the keys in the specified managed HSM.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name The name of the Managed HSM Pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the page of keys as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ManagedHsmKey> list(String resourceGroupName, String name);

    /**
     * Lists the keys in the specified managed HSM.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name The name of the Managed HSM Pool within the specified resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the page of keys as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ManagedHsmKey> list(String resourceGroupName, String name, Context context);

    /**
     * Gets the specified version of the specified key in the specified managed HSM.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name The name of the Managed HSM Pool within the specified resource group.
     * @param keyName The name of the key to be created. The value you provide may be copied globally for the purpose of
     *     running the service. The value provided should not include personally identifiable or sensitive information.
     * @param keyVersion The version of the key to be retrieved.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified version of the specified key in the specified managed HSM along with {@link Response}.
     */
    Response<ManagedHsmKey> getVersionWithResponse(
        String resourceGroupName, String name, String keyName, String keyVersion, Context context);

    /**
     * Gets the specified version of the specified key in the specified managed HSM.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name The name of the Managed HSM Pool within the specified resource group.
     * @param keyName The name of the key to be created. The value you provide may be copied globally for the purpose of
     *     running the service. The value provided should not include personally identifiable or sensitive information.
     * @param keyVersion The version of the key to be retrieved.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified version of the specified key in the specified managed HSM.
     */
    ManagedHsmKey getVersion(String resourceGroupName, String name, String keyName, String keyVersion);

    /**
     * Lists the versions of the specified key in the specified managed HSM.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name The name of the Managed HSM Pool within the specified resource group.
     * @param keyName The name of the key to be created. The value you provide may be copied globally for the purpose of
     *     running the service. The value provided should not include personally identifiable or sensitive information.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the page of keys as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ManagedHsmKey> listVersions(String resourceGroupName, String name, String keyName);

    /**
     * Lists the versions of the specified key in the specified managed HSM.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name The name of the Managed HSM Pool within the specified resource group.
     * @param keyName The name of the key to be created. The value you provide may be copied globally for the purpose of
     *     running the service. The value provided should not include personally identifiable or sensitive information.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the page of keys as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ManagedHsmKey> listVersions(String resourceGroupName, String name, String keyName, Context context);

    /**
     * Gets the current version of the specified key from the specified managed HSM.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current version of the specified key from the specified managed HSM along with {@link Response}.
     */
    ManagedHsmKey getById(String id);

    /**
     * Gets the current version of the specified key from the specified managed HSM.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current version of the specified key from the specified managed HSM along with {@link Response}.
     */
    Response<ManagedHsmKey> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ManagedHsmKey resource.
     *
     * @param name resource name.
     * @return the first stage of the new ManagedHsmKey definition.
     */
    ManagedHsmKey.DefinitionStages.Blank define(String name);
}
