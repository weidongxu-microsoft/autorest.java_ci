// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventhubs.generated.implementation;

import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.eventhubs.generated.fluent.NetworkSecurityPerimeterConfigurationsOperationsClient;
import com.azure.resourcemanager.eventhubs.generated.models.NetworkSecurityPerimeterConfigurationsOperations;

public final class NetworkSecurityPerimeterConfigurationsOperationsImpl
    implements NetworkSecurityPerimeterConfigurationsOperations {
    private static final ClientLogger LOGGER =
        new ClientLogger(NetworkSecurityPerimeterConfigurationsOperationsImpl.class);

    private final NetworkSecurityPerimeterConfigurationsOperationsClient innerClient;

    private final com.azure.resourcemanager.eventhubs.generated.EventHubsManager serviceManager;

    public NetworkSecurityPerimeterConfigurationsOperationsImpl(
        NetworkSecurityPerimeterConfigurationsOperationsClient innerClient,
        com.azure.resourcemanager.eventhubs.generated.EventHubsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public void createOrUpdate(String resourceGroupName, String namespaceName, String resourceAssociationName) {
        this.serviceClient().createOrUpdate(resourceGroupName, namespaceName, resourceAssociationName);
    }

    public void createOrUpdate(
        String resourceGroupName, String namespaceName, String resourceAssociationName, Context context) {
        this.serviceClient().createOrUpdate(resourceGroupName, namespaceName, resourceAssociationName, context);
    }

    private NetworkSecurityPerimeterConfigurationsOperationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.eventhubs.generated.EventHubsManager manager() {
        return this.serviceManager;
    }
}
