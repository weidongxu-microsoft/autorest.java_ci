// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventhubs.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.eventhubs.generated.fluent.models.FailOverProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The FailOver model.
 */
@Fluent
public final class FailOver {
    /*
     * The properties property.
     */
    @JsonProperty(value = "properties")
    private FailOverProperties innerProperties;

    /**
     * Creates an instance of FailOver class.
     */
    public FailOver() {
    }

    /**
     * Get the innerProperties property: The properties property.
     * 
     * @return the innerProperties value.
     */
    private FailOverProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the primaryLocation property: Query parameter for the new primary location after failover.
     * 
     * @return the primaryLocation value.
     */
    public String primaryLocation() {
        return this.innerProperties() == null ? null : this.innerProperties().primaryLocation();
    }

    /**
     * Set the primaryLocation property: Query parameter for the new primary location after failover.
     * 
     * @param primaryLocation the primaryLocation value to set.
     * @return the FailOver object itself.
     */
    public FailOver withPrimaryLocation(String primaryLocation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new FailOverProperties();
        }
        this.innerProperties().withPrimaryLocation(primaryLocation);
        return this;
    }

    /**
     * Get the force property: If Force is false then graceful failover is attempted after ensuring no data loss. If
     * Force flag is set to true, Forced failover is attempted with possible data loss.
     * 
     * @return the force value.
     */
    public Boolean force() {
        return this.innerProperties() == null ? null : this.innerProperties().force();
    }

    /**
     * Set the force property: If Force is false then graceful failover is attempted after ensuring no data loss. If
     * Force flag is set to true, Forced failover is attempted with possible data loss.
     * 
     * @param force the force value to set.
     * @return the FailOver object itself.
     */
    public FailOver withForce(Boolean force) {
        if (this.innerProperties() == null) {
            this.innerProperties = new FailOverProperties();
        }
        this.innerProperties().withForce(force);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
