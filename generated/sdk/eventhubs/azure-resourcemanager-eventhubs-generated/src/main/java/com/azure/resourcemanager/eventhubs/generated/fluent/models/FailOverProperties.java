// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventhubs.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The FailOverProperties model.
 */
@Fluent
public final class FailOverProperties {
    /*
     * Query parameter for the new primary location after failover.
     */
    @JsonProperty(value = "primaryLocation")
    private String primaryLocation;

    /*
     * If Force is false then graceful failover is attempted after ensuring no data loss. If Force flag is set to true,
     * Forced failover is attempted with possible data loss.
     */
    @JsonProperty(value = "force")
    private Boolean force;

    /**
     * Creates an instance of FailOverProperties class.
     */
    public FailOverProperties() {
    }

    /**
     * Get the primaryLocation property: Query parameter for the new primary location after failover.
     * 
     * @return the primaryLocation value.
     */
    public String primaryLocation() {
        return this.primaryLocation;
    }

    /**
     * Set the primaryLocation property: Query parameter for the new primary location after failover.
     * 
     * @param primaryLocation the primaryLocation value to set.
     * @return the FailOverProperties object itself.
     */
    public FailOverProperties withPrimaryLocation(String primaryLocation) {
        this.primaryLocation = primaryLocation;
        return this;
    }

    /**
     * Get the force property: If Force is false then graceful failover is attempted after ensuring no data loss. If
     * Force flag is set to true, Forced failover is attempted with possible data loss.
     * 
     * @return the force value.
     */
    public Boolean force() {
        return this.force;
    }

    /**
     * Set the force property: If Force is false then graceful failover is attempted after ensuring no data loss. If
     * Force flag is set to true, Forced failover is attempted with possible data loss.
     * 
     * @param force the force value to set.
     * @return the FailOverProperties object itself.
     */
    public FailOverProperties withForce(Boolean force) {
        this.force = force;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
