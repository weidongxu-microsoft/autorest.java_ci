// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Describes Advanced Audio Codec (AAC) audio encoding settings.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "@odata.type", defaultImpl = AacAudio.class, visible = true)
@JsonTypeName("#Microsoft.Media.AacAudio")
@Fluent
public final class AacAudio extends Audio {
    /*
     * The discriminator for derived types.
     */
    @JsonTypeId
    @JsonProperty(value = "@odata.type", required = true)
    private String odataType = "#Microsoft.Media.AacAudio";

    /*
     * The encoding profile to be used when encoding audio with AAC.
     */
    @JsonProperty(value = "profile")
    private AacAudioProfile profile;

    /**
     * Creates an instance of AacAudio class.
     */
    public AacAudio() {
    }

    /**
     * Get the odataType property: The discriminator for derived types.
     * 
     * @return the odataType value.
     */
    @Override
    public String odataType() {
        return this.odataType;
    }

    /**
     * Get the profile property: The encoding profile to be used when encoding audio with AAC.
     * 
     * @return the profile value.
     */
    public AacAudioProfile profile() {
        return this.profile;
    }

    /**
     * Set the profile property: The encoding profile to be used when encoding audio with AAC.
     * 
     * @param profile the profile value to set.
     * @return the AacAudio object itself.
     */
    public AacAudio withProfile(AacAudioProfile profile) {
        this.profile = profile;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AacAudio withChannels(Integer channels) {
        super.withChannels(channels);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AacAudio withSamplingRate(Integer samplingRate) {
        super.withSamplingRate(samplingRate);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AacAudio withBitrate(Integer bitrate) {
        super.withBitrate(bitrate);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AacAudio withLabel(String label) {
        super.withLabel(label);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
