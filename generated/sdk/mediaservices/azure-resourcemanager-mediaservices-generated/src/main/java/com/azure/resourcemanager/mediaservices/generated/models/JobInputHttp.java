// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * Represents HTTPS job input.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "@odata.type", defaultImpl = JobInputHttp.class, visible = true)
@JsonTypeName("#Microsoft.Media.JobInputHttp")
@Fluent
public final class JobInputHttp extends JobInputClip {
    /*
     * The discriminator for derived types.
     */
    @JsonTypeId
    @JsonProperty(value = "@odata.type", required = true)
    private String odataType = "#Microsoft.Media.JobInputHttp";

    /*
     * Base URI for HTTPS job input. It will be concatenated with provided file names. If no base uri is given, then the provided file list is assumed to be fully qualified uris. Maximum length of 4000 characters. The query strings will not be returned in service responses to prevent sensitive data exposure.
     */
    @JsonProperty(value = "baseUri")
    private String baseUri;

    /**
     * Creates an instance of JobInputHttp class.
     */
    public JobInputHttp() {
    }

    /**
     * Get the odataType property: The discriminator for derived types.
     * 
     * @return the odataType value.
     */
    @Override
    public String odataType() {
        return this.odataType;
    }

    /**
     * Get the baseUri property: Base URI for HTTPS job input. It will be concatenated with provided file names. If no
     * base uri is given, then the provided file list is assumed to be fully qualified uris. Maximum length of 4000
     * characters. The query strings will not be returned in service responses to prevent sensitive data exposure.
     * 
     * @return the baseUri value.
     */
    public String baseUri() {
        return this.baseUri;
    }

    /**
     * Set the baseUri property: Base URI for HTTPS job input. It will be concatenated with provided file names. If no
     * base uri is given, then the provided file list is assumed to be fully qualified uris. Maximum length of 4000
     * characters. The query strings will not be returned in service responses to prevent sensitive data exposure.
     * 
     * @param baseUri the baseUri value to set.
     * @return the JobInputHttp object itself.
     */
    public JobInputHttp withBaseUri(String baseUri) {
        this.baseUri = baseUri;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobInputHttp withFiles(List<String> files) {
        super.withFiles(files);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobInputHttp withStart(ClipTime start) {
        super.withStart(start);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobInputHttp withEnd(ClipTime end) {
        super.withEnd(end);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobInputHttp withLabel(String label) {
        super.withLabel(label);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobInputHttp withInputDefinitions(List<InputDefinition> inputDefinitions) {
        super.withInputDefinitions(inputDefinitions);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
