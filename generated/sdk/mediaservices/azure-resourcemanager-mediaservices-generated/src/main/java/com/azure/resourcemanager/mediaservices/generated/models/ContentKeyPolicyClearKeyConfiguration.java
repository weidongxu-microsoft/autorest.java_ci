// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents a configuration for non-DRM keys.
 */
@Immutable
public final class ContentKeyPolicyClearKeyConfiguration extends ContentKeyPolicyConfiguration {
    /**
     * Creates an instance of ContentKeyPolicyClearKeyConfiguration class.
     */
    public ContentKeyPolicyClearKeyConfiguration() {
        this.odataType = "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration";
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        toJsonShared(jsonWriter);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ContentKeyPolicyClearKeyConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ContentKeyPolicyClearKeyConfiguration if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ContentKeyPolicyClearKeyConfiguration.
     */
    public static ContentKeyPolicyClearKeyConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ContentKeyPolicyClearKeyConfiguration deserializedContentKeyPolicyClearKeyConfiguration
                = new ContentKeyPolicyClearKeyConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("@odata.type".equals(fieldName)) {
                    deserializedContentKeyPolicyClearKeyConfiguration.odataType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedContentKeyPolicyClearKeyConfiguration;
        });
    }
}
