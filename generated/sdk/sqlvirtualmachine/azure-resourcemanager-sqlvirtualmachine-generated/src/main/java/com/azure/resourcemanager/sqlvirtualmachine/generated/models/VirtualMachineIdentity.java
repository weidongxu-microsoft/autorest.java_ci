// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sqlvirtualmachine.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Virtual Machine Identity details used for Sql IaaS extension configurations.
 */
@Fluent
public final class VirtualMachineIdentity implements JsonSerializable<VirtualMachineIdentity> {
    /*
     * Identity type of the virtual machine. Specify None to opt-out of Managed Identities.
     */
    private VmIdentityType type;

    /*
     * ARM Resource Id of the identity. Only required when UserAssigned identity is selected.
     */
    private String resourceId;

    /**
     * Creates an instance of VirtualMachineIdentity class.
     */
    public VirtualMachineIdentity() {
    }

    /**
     * Get the type property: Identity type of the virtual machine. Specify None to opt-out of Managed Identities.
     * 
     * @return the type value.
     */
    public VmIdentityType type() {
        return this.type;
    }

    /**
     * Set the type property: Identity type of the virtual machine. Specify None to opt-out of Managed Identities.
     * 
     * @param type the type value to set.
     * @return the VirtualMachineIdentity object itself.
     */
    public VirtualMachineIdentity withType(VmIdentityType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the resourceId property: ARM Resource Id of the identity. Only required when UserAssigned identity is
     * selected.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: ARM Resource Id of the identity. Only required when UserAssigned identity is
     * selected.
     * 
     * @param resourceId the resourceId value to set.
     * @return the VirtualMachineIdentity object itself.
     */
    public VirtualMachineIdentity withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeStringField("resourceId", this.resourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualMachineIdentity from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualMachineIdentity if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualMachineIdentity.
     */
    public static VirtualMachineIdentity fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualMachineIdentity deserializedVirtualMachineIdentity = new VirtualMachineIdentity();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedVirtualMachineIdentity.type = VmIdentityType.fromString(reader.getString());
                } else if ("resourceId".equals(fieldName)) {
                    deserializedVirtualMachineIdentity.resourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualMachineIdentity;
        });
    }
}
